<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>火龙窝</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yunhao.life/"/>
  <updated>2018-06-30T09:14:16.576Z</updated>
  <id>http://yunhao.life/</id>
  
  <author>
    <name>喷水小火龙</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NPM 学习笔记</title>
    <link href="http://yunhao.life/2018/06/30/npm-instruction-learning-note/"/>
    <id>http://yunhao.life/2018/06/30/npm-instruction-learning-note/</id>
    <published>2018-06-29T17:12:40.000Z</published>
    <updated>2018-06-30T09:14:16.576Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h1><p>NPM全称是node package manager。在安装nodejs的时候就会连带安装npm，用来维护和管理node_modules。我为什么要写这篇博客呢？因为懒得每次都百度。所以就mark一下。  </p><h1 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h1><p>官方的中文文档请见<a href="https://www.npmjs.com.cn/" target="_blank" rel="noopener">中文文档</a>  </p><h1 id="本地安装和全局安装"><a href="#本地安装和全局安装" class="headerlink" title="本地安装和全局安装"></a>本地安装和全局安装</h1><p>如果你自己的模块依赖于某个包，并通过 Node.js 的 require 加载，那么你应该选择本地安装，这种方式也是 npm install 命令的默认行为。<br>如果你想将包作为一个命令行工具，（比如 grunt CLI），那么你应该选择全局安装。  </p><h1 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h1><p>一个package.json文件必须有”name”，”version”两个字段，要求如下：  </p><blockquote><ul><li>“name”<ul><li>都是小写字母</li><li>一个单词，没有空格</li><li>可以有-和_</li></ul></li><li>“version”<ul><li>形如x.x.x</li><li>遵守语法规范</li></ul></li></ul></blockquote><h1 id="语义化版本号"><a href="#语义化版本号" class="headerlink" title="语义化版本号"></a>语义化版本号</h1><p>a.b.c的含义，如下：<br>发布补丁，就增加最后一位数字，比如1.0.1<br>如果增加新功能，且不影响原有的功能，就增加小版本号，比如1.1.0<br>如果引入的变化，破坏了向后兼容性，就增加大版本号，比如2.0.0<br>对于依赖包的版本，版本位置应该怎样填写？  </p><ul><li>只接受补丁: 1.0 或 1.0.x 或 ~1.0.4</li><li>只接受小版本号和补丁: 1 或 1.x 或 ^1.0.4</li><li>接受全部更新: * 或 x</li></ul><h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><ul><li>npm更新<br><code>npm install npm -g</code><br><code>npm install npm@latest -g</code> 安装最新测试版<br><code>npm install npm@next -g</code> 安装下一个未发行版  </li><li>创建package.json<br><code>npm init</code><br><code>npm init -y</code> 会抽取项目的信息来生成package.json<br><code>npm init --yes</code> 会抽取项目的信息来生成package.json<br><code>npm set init.author.email &quot;wombat@npmjs.com&quot;</code> 设置初始化信息<br><code>npm set init.author.name &quot;ag_dubs&quot;</code> 设置初始化信息<br><code>npm set init.license &quot;MIT&quot;</code> 设置初始化信息  </li><li>查看npm版本<br><code>npm -v</code>  </li><li>安装模块<br><code>npm install &lt;package_name&gt;</code> 本地安装<br><code>npm install &lt;package_name&gt; -g</code> 全局安装<br><code>npm install &lt;package_name&gt; --save</code> 会将package_name添加到package.json中的dependencies下<br><code>npm install &lt;package_name&gt; --save-dev</code> 会将package_name添加到package.json中的devDependencies下  </li><li>更新模块<br><code>npm update [-g] [&lt;pkg&gt;...]</code> -g决定更新全局还是更新本地，如果没指定任何的pkg，那么就都更新。  </li><li>检查模块更新<br><code>npm outdated [[&lt;@scope&gt;/]&lt;pkg&gt; ...]</code>  </li><li>删除模块<br><code>npm uninstall &lt;package_name&gt;</code><br><code>npm uninstall --save &lt;package_name&gt;</code> 卸载并移除package.json中的依赖。  </li><li>查看全局安装的模块<br><code>npm list -g</code></li><li>查看某个模块的版本号<br><code>npm list &lt;Module Name&gt;</code></li><li>查看当前目录所有模块<br><code>npm ls</code></li><li>搜索某模块<br><code>npm search &lt;Module Name&gt;</code></li><li>查看某条命令帮助<br><code>npm help &lt;command&gt;</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;NPM&quot;&gt;&lt;a href=&quot;#NPM&quot; class=&quot;headerlink&quot; title=&quot;NPM&quot;&gt;&lt;/a&gt;NPM&lt;/h1&gt;&lt;p&gt;NPM全称是node package manager。在安装nodejs的时候就会连带安装npm，用来维护和管理node_modul
      
    
    </summary>
    
      <category term="NodeJS" scheme="http://yunhao.life/categories/NodeJS/"/>
    
    
      <category term="NPM" scheme="http://yunhao.life/tags/NPM/"/>
    
      <category term="NodeJS" scheme="http://yunhao.life/tags/NodeJS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT 添加 DaoVoice 在线聊天</title>
    <link href="http://yunhao.life/2018/06/30/hexo-next-add-daovoice-contact/"/>
    <id>http://yunhao.life/2018/06/30/hexo-next-add-daovoice-contact/</id>
    <published>2018-06-29T17:11:22.000Z</published>
    <updated>2018-06-30T04:04:16.832Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DaoVoice"><a href="#DaoVoice" class="headerlink" title="DaoVoice"></a>DaoVoice</h1><p>一个实时在线沟通的工具。可以及时解答客户的问题。还能够绑定微信。具体请看<a href="http://blog.daovoice.io/daovocie_manhua/?utm_source=DaoCloud&amp;utm_campaign=39_campaign&amp;utm_medium=daovoice_widget&amp;utm_term=footer_link&amp;utm_content=one_min" target="_blank" rel="noopener">一分钟了解DaoVoice</a>  </p><h1 id="新建应用"><a href="#新建应用" class="headerlink" title="新建应用"></a>新建应用</h1><p>首先现在DaoVoice上注册一个账号。打开<a href="https://www.daocloud.io/" target="_blank" rel="noopener">DaoCloud首页</a>。找到DaoVoice服务，然后点击，如下图：<br><img src="/images/hexo-next-add-daovoice-contact/1.png" alt="DaoVoice服务"><br>然后再下边的界面中选择注册，或登录。<br><img src="/images/hexo-next-add-daovoice-contact/2.png" alt="注册或登录"><br>如果是新注册的用户，那么注册之后，就会看到下面的这个界面。这个是让你添加一个应用的，填写你的公司名称，你的电话号码，然后点击保存就好了<br><img src="/images/hexo-next-add-daovoice-contact/3.png" alt="新建应用"><br>如果你是老用户了，找不到上边这个界面了，在下面的位置可以找到，找到之后向上边设置一下。<br><img src="/images/hexo-next-add-daovoice-contact/4.png" alt="新建应用"></p><h1 id="安装到网站"><a href="#安装到网站" class="headerlink" title="安装到网站"></a>安装到网站</h1><p>如下图，点击应用设置，安装到网站，JS，仅匿名用户，然后找到下面两个代码。<br><img src="/images/hexo-next-add-daovoice-contact/5.png" alt="安装到网站"><br>打开博客的主题目录下的文件<code>/themes/next/layout/_custom/head.swig</code>。<br>然后粘贴成下面这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;#</span><br><span class="line">Custom head.</span><br><span class="line">#&#125;</span><br><span class="line">&#123;% if config.daovoice %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/&#123;&#123;config.daovoice_app_id&#125;&#125;.js&quot;,&quot;daovoice&quot;)</span><br><span class="line">  daovoice(&apos;init&apos;, &#123;</span><br><span class="line">      app_id: &quot;&#123;&#123;config.daovoice_app_id&#125;&#125;&quot;</span><br><span class="line">    &#125;);</span><br><span class="line">  daovoice(&apos;update&apos;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><p>注意app_id后边的那个要换一下，然后那个网址后边哪儿也要换成变量。就是上边图片中，那两段代码中被黑条盖住的部分要替换<br>那个被黑条盖住的部分就是你的app_id。打开<code>博客配置文件</code>然后增加下面内容：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实时联系</span></span><br><span class="line"><span class="attr">daovoice:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">daovoice_app_id:</span> <span class="string">你的app_id</span></span><br></pre></td></tr></table></figure></p><p>将<code>你的app_id</code>替换成黑条盖住的部分就行了。然后执行<code>hexo cl &amp; hexo g &amp; hexo d</code>，之后ping一下，如下图<br><img src="/images/hexo-next-add-daovoice-contact/6.png" alt="Ping"><br>如果成功了，现在就已经接入了，网站右下角就应该有一个悬浮钮了。  </p><h1 id="微信绑定"><a href="#微信绑定" class="headerlink" title="微信绑定"></a>微信绑定</h1><p>绑定到微信，可以实时处理消息，回复消息。<br><img src="/images/hexo-next-add-daovoice-contact/7.png" alt="微信绑定"><br>扫码之后，就能看到下面的绑定成功。<br><img src="/images/hexo-next-add-daovoice-contact/8.png" alt="绑定成功"></p><h1 id="设置悬浮钮"><a href="#设置悬浮钮" class="headerlink" title="设置悬浮钮"></a>设置悬浮钮</h1><p>如果悬浮钮遮挡其他元素了，或者是想设置悬浮钮的颜色，什么的。点击应用设置，聊天设置，如下图：<br><img src="/images/hexo-next-add-daovoice-contact/9.png" alt="聊天设置"><br>在这里，我们可以设置欢迎语，按钮的颜色，位置什么的。  </p><h1 id="新消息指派"><a href="#新消息指派" class="headerlink" title="新消息指派"></a>新消息指派</h1><p>设置一下新消息指派，点击应用设置，新消息设置，默认指派选择自己。如下图<br><img src="/images/hexo-next-add-daovoice-contact/10.png" alt="新消息指派"></p><h1 id="费用问题"><a href="#费用问题" class="headerlink" title="费用问题"></a>费用问题</h1><p>这个应用是免费的。不过也有付费版。你的网站用户数小于5000的时候，就是免费的。具体的需不需要付费，请看<a href="http://guide.daocloud.io/daovoice/%E6%94%B6%E8%B4%B9%E8%A7%84%E5%88%99-9145665.html?_ga=2.184733417.1747920387.1530264739-470864725.1530264739" target="_blank" rel="noopener">资费情况</a>  </p><h1 id="用户手册"><a href="#用户手册" class="headerlink" title="用户手册"></a>用户手册</h1><p>其他问题，请自行查阅<a href="http://guide.daocloud.io/daovoice/daovoice-5868545.html" target="_blank" rel="noopener">官方用户手册</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;DaoVoice&quot;&gt;&lt;a href=&quot;#DaoVoice&quot; class=&quot;headerlink&quot; title=&quot;DaoVoice&quot;&gt;&lt;/a&gt;DaoVoice&lt;/h1&gt;&lt;p&gt;一个实时在线沟通的工具。可以及时解答客户的问题。还能够绑定微信。具体请看&lt;a href=&quot;h
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yunhao.life/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yunhao.life/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://yunhao.life/tags/NexT/"/>
    
      <category term="DaoVoice" scheme="http://yunhao.life/tags/DaoVoice/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT 站内搜索 站点统计 RSS订阅 字数统计 阅读时长 进度条 图片放大 canvas背景 功能配置</title>
    <link href="http://yunhao.life/2018/06/29/hexo-next-function-setting/"/>
    <id>http://yunhao.life/2018/06/29/hexo-next-function-setting/</id>
    <published>2018-06-29T11:11:35.000Z</published>
    <updated>2018-06-29T12:47:20.397Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo的NexT主题的一些功能如何开启。如下：站内搜索功能、站点访客量、站点阅读量、站点总字数、站点总阅读时长、RSS订阅、博文字数、博文阅读时长、博文阅读量、优雅的进度条、点击博文内图片放大、canvas背景</p><a id="more"></a><h1 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h1><p>NexT支持集成Swiftype、微搜索、Local Search和Algolia。Swiftype、微搜索我没具体了解。<br>Algolia界面很优雅，因为这个是第三方的，每次都得<code>hexo algolia</code>来上传一下，多了一步操作。而且，Algolia有试用期，试用期过后就降为免费版了，免费版的搜索时不能对文章内容进行搜索。所以，我没用这个。<br>我用的是Local Search，这个是每次hexo g的时候都会产生一个<code>search.xml</code>的文件，搜索就是从这个文件里搜索，这个比较方便。而且支持文章内容搜索。下面说Local Search怎么配置。<br>先打开博客根目录，安装<code>hexo-generator-searchdb</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></p><p>然后去<code>博客配置文件</code>中加入下面的<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></p><p>解释一下各个字段含义：摘自<a href="https://github.com/theme-next/hexo-generator-searchdb" target="_blank" rel="noopener">官方</a></p><blockquote><ul><li>path - file path. By default is search.xml . If the file extension is .json, the output format will be JSON. Otherwise XML format file will be exported.</li><li>field - the search scope you want to search, you can chose:<ul><li>post (Default) - will only covers all the posts of your blog.</li><li>page - will only covers all the pages of your blog.</li><li>all - will covers all the posts and pages of your blog.</li></ul></li><li>format - the form of the page contents, works with xml mode, options are:<ul><li>html (Default) - original html string being minified.</li><li>raw - markdown text of each posts or pages.</li><li>excerpt - only collect excerpt.</li><li>more - act as you think.</li></ul></li><li>limit - define the maximum number of posts being indexed, always prefer the newest.</li></ul></blockquote><p>limit就是xml中的包含的最大论文篇数。<br>去<code>主题配置文件</code>中，打开local search。enable设置true<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line"><span class="attr">  trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line"><span class="attr">  top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># unescape html strings to the readable one</span></span><br><span class="line"><span class="attr">  unescape:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><h1 id="站点访客量-站点阅读量"><a href="#站点访客量-站点阅读量" class="headerlink" title="站点访客量 站点阅读量"></a>站点访客量 站点阅读量</h1><p>这个用<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a>，去<code>主题配置文件</code>中打开busuanzi就好。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show Views/Visitors of the website/page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  total_views:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_views_icon:</span> <span class="string">eye</span></span><br><span class="line"><span class="attr">  post_views:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  post_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure></p><p>特别说明一下，不蒜子就是统计每个url访问了多少次。虽然能够统计单片博文的访问量，但是没办法在主页显示某个博文的访问量，只有点进去这个博文，才能显示访问量。<br>所以单篇博文访问量我们用leancloud，详见<a href="/2018/06/27/hexo-leancloud-plugin-installation-tutor/">Hexo NexT 主题 LeanCloud 插件安装教程</a>  </p><h1 id="站点总字数-站点总阅读时长-博文字数-博文阅读时长"><a href="#站点总字数-站点总阅读时长-博文字数-博文阅读时长" class="headerlink" title="站点总字数 站点总阅读时长 博文字数 博文阅读时长"></a>站点总字数 站点总阅读时长 博文字数 博文阅读时长</h1><p>首先安装hexo-symbols-count-time，在博客根目录输入，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure></p><p>修改博客配置文件，打开<code>博客配置文件</code>，添加如下内容。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"><span class="attr">  symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  time:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_time:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>symbols是博文字数，time是博文阅读时长，total_symbols是站点总字数，total_time是站点总阅读时长。<br>检查一下<code>主题配置文件</code>:<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"><span class="attr">  separated_meta:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  item_text_post:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  item_text_total:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  awl:</span> <span class="number">4</span></span><br><span class="line"><span class="attr">  wpm:</span> <span class="number">275</span></span><br></pre></td></tr></table></figure></p><p>awl是平均字长度average word length，默认是4，wpm是阅读速度，word per minute。  </p><h1 id="RSS订阅"><a href="#RSS订阅" class="headerlink" title="RSS订阅"></a>RSS订阅</h1><p>打开<code>主题配置文件</code>，找到如下：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set rss to false to disable feed link.</span></span><br><span class="line"><span class="comment"># Leave rss as empty to use site's feed link, and install hexo-generator-feed: `npm install hexo-generator-feed --save`.</span></span><br><span class="line"><span class="comment"># Set rss to specific value if you have burned your feed already.</span></span><br><span class="line"><span class="attr">rss:</span></span><br></pre></td></tr></table></figure></p><p>如果你自己生成了rss，那么上边就填地址，否则的话留空。<br>安装hexo-generator-feed，在博客根目录输入，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></p><p>每次<code>hexo g</code>的时候就会生成了atom.xml。  </p><h1 id="博文阅读量"><a href="#博文阅读量" class="headerlink" title="博文阅读量"></a>博文阅读量</h1><p>不蒜子统计每个url访问了多少次。虽然能够统计单篇博文的访问量，但是没办法在主页显示某个博文的访问量，只有点进去这个博文，才能显示访问量。<br>所以单篇博文访问量我们用leancloud，详见<a href="/2018/06/27/hexo-leancloud-plugin-installation-tutor/">Hexo NexT 主题 LeanCloud 插件安装教程</a>  </p><h1 id="优雅的进度条"><a href="#优雅的进度条" class="headerlink" title="优雅的进度条"></a>优雅的进度条</h1><p>NexT主题里面能够使用Pace来设置优雅的进度条，可以看下<a href="http://github.hubspot.com/pace/docs/welcome/" target="_blank" rel="noopener">Demo</a><br>首先需要<code>git clone</code>一下，打开<code>NexT</code>主题目录下的<code>source\lib</code>目录，执行下面操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pace pace</span><br></pre></td></tr></table></figure></p><p>然后配置一下<code>主题配置文件</code>将pace设置成true。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pace</span></span><br><span class="line"><span class="attr">pace:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># Themes list:</span></span><br><span class="line"><span class="comment">#pace-theme-big-counter</span></span><br><span class="line"><span class="comment">#pace-theme-bounce</span></span><br><span class="line"><span class="comment">#pace-theme-barber-shop</span></span><br><span class="line"><span class="comment">#pace-theme-center-atom</span></span><br><span class="line"><span class="comment">#pace-theme-center-circle</span></span><br><span class="line"><span class="comment">#pace-theme-center-radar</span></span><br><span class="line"><span class="comment">#pace-theme-center-simple</span></span><br><span class="line"><span class="comment">#pace-theme-corner-indicator</span></span><br><span class="line"><span class="comment">#pace-theme-fill-left</span></span><br><span class="line"><span class="comment">#pace-theme-flash</span></span><br><span class="line"><span class="comment">#pace-theme-loading-bar</span></span><br><span class="line"><span class="comment">#pace-theme-mac-osx</span></span><br><span class="line"><span class="comment">#pace-theme-minimal</span></span><br><span class="line"><span class="comment"># For example</span></span><br><span class="line"><span class="comment"># pace_theme: pace-theme-center-simple</span></span><br><span class="line"><span class="attr">pace_theme:</span> <span class="string">pace-theme-corner-indicator</span></span><br></pre></td></tr></table></figure></p><p>可以从上面的那些里面选一个喜欢的主题，写在pace_theme那里。</p><h1 id="图片放大"><a href="#图片放大" class="headerlink" title="图片放大"></a>图片放大</h1><p>使用fancybox来让博文里面的图片能够点击放大查看。<br>首先需要<code>git clone</code>一下，打开<code>NexT</code>主题目录下的<code>source\lib</code>目录<br>注意，如果这个目录下有fancybox文件夹，需要先删了才行。然后执行下面操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-fancybox3 fancybox</span><br></pre></td></tr></table></figure></p><p>然后配置一下<code>主题配置文件</code>将fancybox设置成true。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fancybox. There is support for old version 2 and new version 3.</span></span><br><span class="line"><span class="comment"># Please, choose only any one variant, do not need to install both.</span></span><br><span class="line"><span class="comment"># For install 2.x: https://github.com/theme-next/theme-next-fancybox</span></span><br><span class="line"><span class="comment"># For install 3.x: https://github.com/theme-next/theme-next-fancybox3</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h1 id="canvas背景"><a href="#canvas背景" class="headerlink" title="canvas背景"></a>canvas背景</h1><p>设置博客背景之后，就能跟我这个背景一样了。<br>首先需要<code>git clone</code>一下，打开<code>NexT</code>主题目录下的<code>source\lib</code>目录，执行下面操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-canvas-nest canvas-nest</span><br><span class="line">git clone https://github.com/theme-next/theme-next-three three</span><br></pre></td></tr></table></figure></p><p>然后配置一下<code>主题配置文件</code>下面四个选一个true，其他设置成false<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Canvas-nest</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-canvas-nest</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># JavaScript 3D library.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-three</span></span><br><span class="line"><span class="comment"># three_waves</span></span><br><span class="line"><span class="attr">three_waves:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># canvas_lines</span></span><br><span class="line"><span class="attr">canvas_lines:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># canvas_sphere</span></span><br><span class="line"><span class="attr">canvas_sphere:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo的NexT主题的一些功能如何开启。如下：站内搜索功能、站点访客量、站点阅读量、站点总字数、站点总阅读时长、RSS订阅、博文字数、博文阅读时长、博文阅读量、优雅的进度条、点击博文内图片放大、canvas背景&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yunhao.life/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yunhao.life/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://yunhao.life/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>Git 警告错误 LF will be replaced by CRLF</title>
    <link href="http://yunhao.life/2018/06/29/git-warning-lf-replaced-by-crlf/"/>
    <id>http://yunhao.life/2018/06/29/git-warning-lf-replaced-by-crlf/</id>
    <published>2018-06-29T06:59:18.000Z</published>
    <updated>2018-06-29T07:17:32.913Z</updated>
    
    <content type="html"><![CDATA[<h1 id="症状"><a href="#症状" class="headerlink" title="症状"></a>症状</h1><p>每次使用git的时候，都会出现这个问题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">warning: LF will be replaced by CRLF in tags/组合数学/index.html.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br></pre></td></tr></table></figure></p><p>一报一大溜，真的烦。  </p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>windows中的换行符为 CRLF，而在Linux下的换行符为LF。所以会给换过来。<br>就是说，我们在<code>工作区</code>的文件中，有的是以LF作为换行符结尾的，然后在添加到<code>暂存区</code>的时候，git会<code>暂存区</code>的LF换成CRLF。然后统一提交时候，都是CRLF换行了。  </p><h1 id="Hexo请看这里"><a href="#Hexo请看这里" class="headerlink" title="Hexo请看这里"></a>Hexo请看这里</h1><p>如果是<code>Hexo d</code>的时候出的这个问题。我就是这个时候出的<br>那么直接禁用转换就好了。不需要删除.git什么的。因为<code>hexo d</code>的时候，他会在<code>.deploy_git</code>文件夹内自动从新生成<code>.git</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config –global core.autocrlf false</span><br></pre></td></tr></table></figure></p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>输入下面命令禁用转换。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config –global core.autocrlf false</span><br></pre></td></tr></table></figure></p><p>但是禁用转换之后，必须得把<code>.git</code>删了，然后重新<code>git init</code>一下才行。所以记得保存一下本地的修改什么的。或者push一下。然后：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .git</span><br><span class="line">git init</span><br></pre></td></tr></table></figure></p><p>到这就行了。我不太确定是不是只有windows上边才会有这种问题。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;症状&quot;&gt;&lt;a href=&quot;#症状&quot; class=&quot;headerlink&quot; title=&quot;症状&quot;&gt;&lt;/a&gt;症状&lt;/h1&gt;&lt;p&gt;每次使用git的时候，都会出现这个问题：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="Git" scheme="http://yunhao.life/categories/Git/"/>
    
    
      <category term="Hexo" scheme="http://yunhao.life/tags/Hexo/"/>
    
      <category term="Git" scheme="http://yunhao.life/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>hexo-leancloud-counter-security 插件 Too many requests 错误</title>
    <link href="http://yunhao.life/2018/06/29/hexo-leancloud-counter-security-too-many-requests-error/"/>
    <id>http://yunhao.life/2018/06/29/hexo-leancloud-counter-security-too-many-requests-error/</id>
    <published>2018-06-29T05:05:13.000Z</published>
    <updated>2018-06-29T06:54:32.102Z</updated>
    
    <content type="html"><![CDATA[<h1 id="症状"><a href="#症状" class="headerlink" title="症状"></a>症状</h1><p>如果你懒得看解释的话，直接去看修改代码一节。<br>每次进行<code>hexo d</code>的时候会概率性的出现如下错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ERROR Too many requests. [429 POST https://xtppdvlr.api.lncld.net/1.1/classes/Counter]</span><br><span class="line">Error: Too many requests. [429 POST https://xtppdvlr.api.lncld.net/1.1/classes/Counter]</span><br><span class="line">    at E:\code\blog\node_modules\leancloud-storage\dist\node\request.js:163:17</span><br><span class="line">    at tryCatch (E:\code\blog\node_modules\es6-promise\dist\es6-promise.js:410:12)</span><br><span class="line">    at invokeCallback (E:\code\blog\node_modules\es6-promise\dist\es6-promise.js:425:13)</span><br><span class="line">    at publish (E:\code\blog\node_modules\es6-promise\dist\es6-promise.js:399:7)</span><br><span class="line">    at publishRejection (E:\code\blog\node_modules\es6-promise\dist\es6-promise.js:340:3)</span><br><span class="line">    at flush (E:\code\blog\node_modules\es6-promise\dist\es6-promise.js:128:5)</span><br><span class="line">    at _combinedTickCallback (internal/process/next_tick.js:131:7)</span><br><span class="line">    at process._tickCallback (internal/process/next_tick.js:180:9)</span><br></pre></td></tr></table></figure></p><p>官方解释如下：  </p><blockquote><p>信息 - Too many requests.<br>含义 - 超过应用的流控限制，即超过每个应用同一时刻最多可使用的工作线程数，或者说同一时刻最多可以同时处理的数据请求。通过 控制台 &gt; 存储 &gt; API 统计 &gt; API 性能 &gt; 总览 可以查看应用产生的请求统计数据，如平均工作线程、平均响应时间等。使用 LeanCloud 商用版或企业版 的用户，如有需要，可以联系我们来调整工作线程数。</p></blockquote><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>我查看了源代码，<code>node_modules\hexo-leancloud-counter-security\index.js</code>这个就是源代码。发现每次进行hexo d的时候，他对每个博文的title和url，向leancloud发送一次查询请求，如果发现leancloud那边儿没有该条记录的话，那么再发送一条插入请求。<br>原逻辑如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">_.forEach(urls, <span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> query = <span class="keyword">new</span> AV.Query(<span class="string">'Counter'</span>);</span><br><span class="line">    query.equalTo(<span class="string">'url'</span>, x.url);</span><br><span class="line">    query.count().then(<span class="function"><span class="keyword">function</span> (<span class="params">count</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (count === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> counter = <span class="keyword">new</span> Counter();</span><br><span class="line">            counter.set(<span class="string">'url'</span>, x.url);</span><br><span class="line">            counter.set(<span class="string">'title'</span>, x.title);</span><br><span class="line">            counter.set(<span class="string">'time'</span>, <span class="number">0</span>);</span><br><span class="line">            counter.save().then(<span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">                log.info(x.title + <span class="string">' is saved as: '</span> + obj.id);</span><br><span class="line">            &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">                log.error(error);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">        log.error(error);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>也就是说，每一次<code>hexo d</code>的时候最少的查询次数等于你的博文个数。如果你的leancloud的应用的处理能力不够强大的时候，对于这种高强度的请求，当然会出现Too Many Requests的错误代码。  </p><h1 id="改进思路"><a href="#改进思路" class="headerlink" title="改进思路"></a>改进思路</h1><p>我们要做的就是较少不必要的请求咯。<br>本地记录一个title和url的json数组，每次查询这个数组，看看哪些是真正的需要查询的，然后再去查询leancloud。其实可以这样理解，这个本地的数组存储就是leancloud的远程数据库表。<br>因为筛除了一些记录，所以每次hexo d时的请求数量仅仅是相比上一次hexo d时候的增量。  </p><h1 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h1><p>如果你遇到了问题，看看问题解决一节。<br>修改的是<code>node_modules\hexo-leancloud-counter-security\index.js</code>这个文件<br>hexo-leancloud-counter-security版本是1.3.2<br>一共修改下面几处，在代码中已经做了标记。<br>代码70-84<br>代码87-102<br>代码113-117<br>代码120-123<br>代码126-132<br>代码135-138<br>代码140-142<br>代码225-268<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _regenerator = <span class="built_in">require</span>(<span class="string">'babel-runtime/regenerator'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _regenerator2 = _interopRequireDefault(_regenerator);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _asyncToGenerator2 = <span class="built_in">require</span>(<span class="string">'babel-runtime/helpers/asyncToGenerator'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _stringify = <span class="built_in">require</span>(<span class="string">'babel-runtime/core-js/json/stringify'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _stringify2 = _interopRequireDefault(_stringify);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sync = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _ref = (<span class="number">0</span>, _asyncToGenerator3.default)( <span class="comment">/*#__PURE__*/</span>_regenerator2.default.mark(<span class="function"><span class="keyword">function</span> _callee(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> log, config, APP_ID, APP_KEY, publicDir, UrlsFile, urls, currentUser, userName, passWord, Counter;</span><br><span class="line">        <span class="keyword">return</span> _regenerator2.default.wrap(<span class="function"><span class="keyword">function</span> _callee$(<span class="params">_context</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (_context.prev = _context.next) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                        log = <span class="keyword">this</span>.log;</span><br><span class="line">                        config = <span class="keyword">this</span>.config;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (!config.leancloud_counter_security.enable_sync) &#123;</span><br><span class="line">                            _context.next = <span class="number">19</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        APP_ID = config.leancloud_counter_security.app_id;</span><br><span class="line">                        APP_KEY = config.leancloud_counter_security.app_key;</span><br><span class="line">                        publicDir = <span class="keyword">this</span>.public_dir;</span><br><span class="line">                        UrlsFile = pathFn.join(publicDir, <span class="string">'leancloud_counter_security_urls.json'</span>);</span><br><span class="line">                        urls = <span class="built_in">JSON</span>.parse(fs.readFileSync(UrlsFile, <span class="string">'utf8'</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        AV.init(&#123;</span><br><span class="line">                            appId: APP_ID,</span><br><span class="line">                            appKey: APP_KEY</span><br><span class="line">                        &#125;);</span><br><span class="line"></span><br><span class="line">                        currentUser = AV.User.current();</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (currentUser) &#123;</span><br><span class="line">                            _context.next = <span class="number">16</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        userName = config.leancloud_counter_security.username;</span><br><span class="line">                        passWord = config.leancloud_counter_security.password;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (!userName) &#123;</span><br><span class="line">                            userName = readlineSync.question(<span class="string">'Enter your username: '</span>);</span><br><span class="line">                            passWord = readlineSync.question(<span class="string">'Enter your password: '</span>, &#123; <span class="attr">hideEchoBack</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!passWord) &#123;</span><br><span class="line">                            passWord = readlineSync.question(<span class="string">'Enter your password: '</span>, &#123; <span class="attr">hideEchoBack</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                        _context.next = <span class="number">16</span>;</span><br><span class="line">                        <span class="keyword">return</span> AV.User.logIn(userName, passWord).then(<span class="function"><span class="keyword">function</span> (<span class="params">loginedUser</span>) </span>&#123;</span><br><span class="line">                            log.info(<span class="string">'Logined as: '</span> + loginedUser.getUsername());</span><br><span class="line">                        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">                            log.error(error);</span><br><span class="line">                        &#125;);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line"></span><br><span class="line">                        log.info(<span class="string">'Now syncing your posts list to leancloud counter...'</span>);</span><br><span class="line">                        Counter = AV.Object.extend(<span class="string">'Counter'</span>);</span><br><span class="line">                        </span><br><span class="line">                        <span class="comment">//----add----</span></span><br><span class="line">                        urls.sort(cmp);</span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">var</span> memoFile = pathFn.join(publicDir, <span class="string">"leancloud_memo"</span>);</span><br><span class="line">                        <span class="keyword">if</span>(!fs.existsSync(memoFile))&#123;</span><br><span class="line">                            fs.writeFileSync(memoFile, <span class="string">"[\n]"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">var</span> memoData = fs.readFileSync(memoFile, <span class="string">"utf-8"</span>).split(<span class="string">"\n"</span>);</span><br><span class="line">                        <span class="keyword">var</span> memoIdx = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">var</span> newData = [];</span><br><span class="line">                        <span class="keyword">var</span> cnt = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">var</span> limit = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">var</span> env = <span class="keyword">this</span>;</span><br><span class="line">                        <span class="comment">//----end----</span></span><br><span class="line">                        </span><br><span class="line">                        _.forEach(urls, <span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">                            <span class="comment">//----add----</span></span><br><span class="line">                            <span class="keyword">var</span> y = &#123;&#125;;</span><br><span class="line">                            y.title = <span class="string">""</span>;</span><br><span class="line">                            y.url = <span class="string">""</span>;</span><br><span class="line">                            </span><br><span class="line">                            <span class="keyword">var</span> flag = <span class="literal">false</span>;</span><br><span class="line">                            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                                <span class="keyword">if</span>(memoData[memoIdx] == <span class="string">']'</span>) <span class="keyword">break</span>;</span><br><span class="line">                                y = <span class="built_in">JSON</span>.parse(memoData[memoIdx].substring(<span class="number">0</span>, memoData[memoIdx].length<span class="number">-1</span>));</span><br><span class="line">                                <span class="keyword">if</span>(y.url &gt;= x.url) <span class="keyword">break</span>;</span><br><span class="line">                                memoIdx++;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span>(y.url != x.url || y.title != x.title) &#123;</span><br><span class="line">                                log.info(<span class="string">"Dealing with record of "</span> + x.title);</span><br><span class="line">                                limit++;</span><br><span class="line">                                <span class="comment">//----end----</span></span><br><span class="line">                                <span class="keyword">var</span> query = <span class="keyword">new</span> AV.Query(<span class="string">'Counter'</span>);</span><br><span class="line">                                query.equalTo(<span class="string">'url'</span>, x.url);</span><br><span class="line">                                query.count().then(<span class="function"><span class="keyword">function</span> (<span class="params">count</span>) </span>&#123;</span><br><span class="line">                                    <span class="keyword">if</span> (count === <span class="number">0</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> counter = <span class="keyword">new</span> Counter();</span><br><span class="line">                                        counter.set(<span class="string">'url'</span>, x.url);</span><br><span class="line">                                        counter.set(<span class="string">'title'</span>, x.title);</span><br><span class="line">                                        counter.set(<span class="string">'time'</span>, <span class="number">0</span>);</span><br><span class="line">                                        counter.save().then(<span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">                                            log.info(x.title + <span class="string">' is saved as: '</span> + obj.id);</span><br><span class="line">                                            <span class="comment">//----add----</span></span><br><span class="line">                                            newData.push(x);</span><br><span class="line">                                            cnt++;</span><br><span class="line">                                            postOperation(env, cnt, limit, newData, memoData);</span><br><span class="line">                                            <span class="comment">//----end----</span></span><br><span class="line">                                        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">                                            log.error(error);</span><br><span class="line">                                            <span class="comment">//----add----</span></span><br><span class="line">                                            cnt++;</span><br><span class="line">                                            postOperation(env, cnt, limit, newData, memoData);</span><br><span class="line">                                            <span class="comment">//----end----</span></span><br><span class="line">                                        &#125;);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="comment">//----add----</span></span><br><span class="line">                                    <span class="keyword">else</span>&#123;</span><br><span class="line">                                        newData.push(x);</span><br><span class="line">                                        cnt++;</span><br><span class="line">                                        postOperation(env, cnt, limit, newData, memoData);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="comment">//----end----</span></span><br><span class="line">                                &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">                                    log.error(error);</span><br><span class="line">                                    <span class="comment">//----add----</span></span><br><span class="line">                                    cnt++;</span><br><span class="line">                                    postOperation(env, cnt, limit, newData, memoData);</span><br><span class="line">                                    <span class="comment">//----end----</span></span><br><span class="line">                                &#125;);</span><br><span class="line">                            <span class="comment">//----add----</span></span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="comment">//----end----</span></span><br><span class="line">                        &#125;);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">case</span> <span class="number">19</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'end'</span>:</span><br><span class="line">                        <span class="keyword">return</span> _context.stop();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, _callee, <span class="keyword">this</span>);</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">sync</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> _ref.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> _interopRequireDefault(<span class="params">obj</span>) </span>&#123; <span class="keyword">return</span> obj &amp;&amp; obj.__esModule ? obj : &#123; <span class="attr">default</span>: obj &#125;; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> AV = <span class="built_in">require</span>(<span class="string">'leancloud-storage'</span>);</span><br><span class="line"><span class="keyword">var</span> _ = <span class="built_in">require</span>(<span class="string">'lodash'</span>);</span><br><span class="line"><span class="keyword">var</span> readlineSync = <span class="built_in">require</span>(<span class="string">'readline-sync'</span>);</span><br><span class="line"><span class="keyword">var</span> packageInfo = <span class="built_in">require</span>(<span class="string">'./package.json'</span>);</span><br><span class="line"><span class="keyword">var</span> pathFn = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">generate_post_list</span>(<span class="params">locals</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">    <span class="keyword">if</span> (config.leancloud_counter_security.enable_sync) &#123;</span><br><span class="line">        <span class="keyword">var</span> urlsPath = <span class="string">'leancloud_counter_security_urls.json'</span>;</span><br><span class="line">        <span class="keyword">var</span> urls = [].concat(locals.posts.toArray()).filter(<span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> x.published;</span><br><span class="line">        &#125;).map(<span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123; <span class="attr">title</span>: x.title, <span class="attr">url</span>: <span class="string">'/'</span> + x.path &#125;;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            path: urlsPath,</span><br><span class="line">            data: (<span class="number">0</span>, _stringify2.default)(urls)</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.extend.generator.register(<span class="string">'leancloud_counter_security_generator'</span>, generate_post_list);</span><br><span class="line"></span><br><span class="line">hexo.extend.deployer.register(<span class="string">'leancloud_counter_security_sync'</span>, sync);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> commandOptions = &#123;</span><br><span class="line">    desc: packageInfo.description,</span><br><span class="line">    usage: <span class="string">' &lt;argument&gt;'</span>,</span><br><span class="line">    <span class="string">'arguments'</span>: [&#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'register | r &lt;username&gt; &lt;password&gt;'</span>,</span><br><span class="line">        <span class="string">'desc'</span>: <span class="string">'Register a new user.'</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">commandFunc</span>(<span class="params">args</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> log = <span class="keyword">this</span>.log;</span><br><span class="line">    <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (args._.length !== <span class="number">3</span>) &#123;</span><br><span class="line">        log.error(<span class="string">'Too Few or Many Arguments.'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (args._[<span class="number">0</span>] === <span class="string">'register'</span> || args._[<span class="number">0</span>] === <span class="string">'r'</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> APP_ID = config.leancloud_counter_security.app_id;</span><br><span class="line">        <span class="keyword">var</span> APP_KEY = config.leancloud_counter_security.app_key;</span><br><span class="line">        AV.init(&#123;</span><br><span class="line">            appId: APP_ID,</span><br><span class="line">            appKey: APP_KEY</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> user = <span class="keyword">new</span> AV.User();</span><br><span class="line">        user.setUsername(<span class="built_in">String</span>(args._[<span class="number">1</span>]));</span><br><span class="line">        user.setPassword(<span class="built_in">String</span>(args._[<span class="number">2</span>]));</span><br><span class="line">        user.signUp().then(<span class="function"><span class="keyword">function</span> (<span class="params">loginedUser</span>) </span>&#123;</span><br><span class="line">            log.info(loginedUser.getUsername() + <span class="string">' is successfully signed up'</span>);</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">            log.error(error);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        log.error(<span class="string">'Unknown Command.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.extend.console.register(<span class="string">'lc-counter'</span>, <span class="string">'hexo-leancloud-counter-security'</span>, commandOptions, commandFunc);</span><br><span class="line"></span><br><span class="line"><span class="comment">//----add----</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cmp</span>(<span class="params">x, y</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.url &lt; y.url)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x.url == y.url)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> postOperation = <span class="function"><span class="keyword">function</span> (<span class="params">env, cnt, limit, newData, memoData</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cnt == limit)&#123;</span><br><span class="line">        <span class="keyword">var</span> log = env.log;</span><br><span class="line">        newData.sort(cmp);</span><br><span class="line">        <span class="keyword">var</span> sourceDir = env.source_dir;</span><br><span class="line">        <span class="keyword">var</span> publicDir = env.public_dir;</span><br><span class="line">        <span class="keyword">var</span> memoFile = pathFn.join(sourceDir, <span class="string">"leancloud_memo"</span>);</span><br><span class="line">        fs.writeFileSync(memoFile, <span class="string">"[\n"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> memoIdx = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; newData[i]; i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(memoData[memoIdx] == <span class="string">']'</span>) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">var</span> y = <span class="built_in">JSON</span>.parse(memoData[memoIdx].substring(<span class="number">0</span>, memoData[memoIdx].length<span class="number">-1</span>));</span><br><span class="line">                <span class="keyword">if</span>(y.url &gt; newData[i].url) <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">                fs.writeFileSync(memoFile, memoData[memoIdx] + <span class="string">"\n"</span>, &#123;<span class="string">'flag'</span>:<span class="string">'a'</span>&#125;);</span><br><span class="line">                memoIdx++;</span><br><span class="line">            &#125;</span><br><span class="line">            fs.writeFileSync(memoFile, <span class="string">"&#123;\"title\":\""</span> + newData[i].title + <span class="string">"\",\"url\":\""</span> + newData[i].url + <span class="string">"\"&#125;,\n"</span>, &#123;<span class="string">'flag'</span>:<span class="string">'a'</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(memoData[memoIdx] != <span class="string">']'</span>)&#123;</span><br><span class="line">            fs.writeFileSync(memoFile, memoData[memoIdx] + <span class="string">"\n"</span>, &#123;<span class="string">'flag'</span>:<span class="string">'a'</span>&#125;);</span><br><span class="line">            memoIdx++;</span><br><span class="line">        &#125;</span><br><span class="line">        fs.writeFileSync(memoFile, memoData[memoIdx], &#123;<span class="string">'flag'</span>:<span class="string">'a'</span>&#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> srcFile = pathFn.join(sourceDir, <span class="string">"leancloud_memo"</span>);</span><br><span class="line">        <span class="keyword">var</span> destFile = pathFn.join(publicDir, <span class="string">"leancloud_memo"</span>);</span><br><span class="line">        <span class="keyword">var</span> readStream = fs.createReadStream(srcFile);</span><br><span class="line">        <span class="keyword">var</span> writeStream = fs.createWriteStream(destFile);</span><br><span class="line">        readStream.pipe(writeStream);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"leancloud_memo successfully updated."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="关键逻辑"><a href="#关键逻辑" class="headerlink" title="关键逻辑"></a>关键逻辑</h1><p>维护memoData和urls数组有序，能够在O(2n)的复杂度内判断出有哪些博文（包括改了题目的，改了文件名的）不在表中。<br>最后的memoData和newData也是有序的，产生的新的文件也是有序的。<br>详见代码，不做过多解释。  </p><h1 id="额外代价"><a href="#额外代价" class="headerlink" title="额外代价"></a>额外代价</h1><p>分析一下，额外引入的代价。<br>时间上的代价：  </p><ul><li>对urls数组进行排序。O(nlogn)  </li><li>urls数组和memoData数组比较以确定某个记录需要向leancloud查询。O(2n)  </li><li>排序newData数组。O(nlogn)  </li><li>将memoData和newData数组整合成一个新的数组。O(2n)  </li><li>将memoData字符串split成数组一次。  </li><li>读取memoData一次。  </li><li>写memoData n次。  </li><li>拷贝memoData一次。  </li></ul><p>空间上的代价：  </p><ul><li>引入newData数组，O(n)  </li><li>引入memoData数组，O(n)  </li><li>引入一个文件leancloud_memo  </li></ul><p>n是博文的数量，一般的话假设有1万篇，这个额外代价感觉还可以。  </p><h1 id="最后一行不加注释"><a href="#最后一行不加注释" class="headerlink" title="最后一行不加注释"></a>最后一行不加注释</h1><p>为什么不在上面代码最后艺一行加上//—-end—-？因为加上注释以后会报错。报错如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">ERROR Plugin load failed: hexo-leancloud-counter-security</span><br><span class="line">E:\code\blog\node_modules\hexo-leancloud-counter-security\index.js:213</span><br><span class="line">&#125;</span><br><span class="line">^</span><br><span class="line"></span><br><span class="line">SyntaxError: Unexpected end of input</span><br><span class="line">    at createScript (vm.js:80:10)</span><br><span class="line">    at Object.runInThisContext (vm.js:139:10)</span><br><span class="line">    at fs.readFile.then.script (E:\code\blog\node_modules\hexo\lib\hexo\index.js:230:19)</span><br><span class="line">    at tryCatcher (E:\code\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (E:\code\blog\node_modules\bluebird\js\release\promise.js:512:31)</span><br><span class="line">    at Promise._settlePromise (E:\code\blog\node_modules\bluebird\js\release\promise.js:569:18)</span><br><span class="line">    at Promise._settlePromise0 (E:\code\blog\node_modules\bluebird\js\release\promise.js:614:10)</span><br><span class="line">    at Promise._settlePromises (E:\code\blog\node_modules\bluebird\js\release\promise.js:693:18)</span><br><span class="line">    at Promise._fulfill (E:\code\blog\node_modules\bluebird\js\release\promise.js:638:18)</span><br><span class="line">    at Promise._resolveCallback (E:\code\blog\node_modules\bluebird\js\release\promise.js:432:57)</span><br><span class="line">    at Promise._settlePromiseFromHandler (E:\code\blog\node_modules\bluebird\js\release\promise.js:524:17)</span><br><span class="line">    at Promise._settlePromise (E:\code\blog\node_modules\bluebird\js\release\promise.js:569:18)</span><br><span class="line">    at Promise._settlePromise0 (E:\code\blog\node_modules\bluebird\js\release\promise.js:614:10)</span><br><span class="line">    at Promise._settlePromises (E:\code\blog\node_modules\bluebird\js\release\promise.js:693:18)</span><br><span class="line">    at Promise._fulfill (E:\code\blog\node_modules\bluebird\js\release\promise.js:638:18)</span><br><span class="line">    at E:\code\blog\node_modules\bluebird\js\release\nodeback.js:42:21</span><br><span class="line">    at E:\code\blog\node_modules\graceful-fs\graceful-fs.js:78:16</span><br><span class="line">    at FSReqWrap.readFileAfterClose [as oncomplete] (fs.js:511:3)</span><br><span class="line">ERROR Deployer not found: leancloud_counter_security_sync</span><br></pre></td></tr></table></figure></p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><p>如果你在<code>hexo d</code>的时候，发现leancloud那边儿没有添加上记录。排除了各种错误之后，还是没有的话。<br>你可以把source文件夹下的leancloud_memo文件删除，然后重新<code>hexo clean &amp; hexo g &amp; hexo d</code>就好了。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;症状&quot;&gt;&lt;a href=&quot;#症状&quot; class=&quot;headerlink&quot; title=&quot;症状&quot;&gt;&lt;/a&gt;症状&lt;/h1&gt;&lt;p&gt;如果你懒得看解释的话，直接去看修改代码一节。&lt;br&gt;每次进行&lt;code&gt;hexo d&lt;/code&gt;的时候会概率性的出现如下错误：&lt;br&gt;&lt;f
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yunhao.life/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yunhao.life/tags/Hexo/"/>
    
      <category term="LeanCloud" scheme="http://yunhao.life/tags/LeanCloud/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT 主题 LeanCloud 插件安装教程</title>
    <link href="http://yunhao.life/2018/06/27/hexo-leancloud-plugin-installation-tutor/"/>
    <id>http://yunhao.life/2018/06/27/hexo-leancloud-plugin-installation-tutor/</id>
    <published>2018-06-27T13:13:51.000Z</published>
    <updated>2018-06-29T05:48:17.126Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeanCloud"><a href="#LeanCloud" class="headerlink" title="LeanCloud"></a>LeanCloud</h1><p>LeanCloud能够给每篇博客统计访问量的工具。<br>首先注册，并登陆<a href="https://leancloud.cn" target="_blank" rel="noopener">LeanCloud</a>。<br>注意：登陆密码要求还得有大写英文字母，小写英文字母，还有数字。  </p><h1 id="膜拜大佬"><a href="#膜拜大佬" class="headerlink" title="膜拜大佬"></a>膜拜大佬</h1><p>这篇博客是学习两位大佬，<a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="noopener">DoubleMine</a>和<a href="https://leaferx.online/2018/02/11/lc-security/" target="_blank" rel="noopener">leaferx</a>，的博文之后写的  </p><h1 id="应用配置"><a href="#应用配置" class="headerlink" title="应用配置"></a>应用配置</h1><p>进入控制台后，我们先创建一个应用。点击创建应用<br><img src="/images/hexo-leancloud-plugin-installation-tutor/1.png" alt="创建应用"><br>然后弹出如下窗口：起名字，选择开发版，之后点击创建按钮<br><img src="/images/hexo-leancloud-plugin-installation-tutor/2.png" alt="创建应用"><br>创建完之后，我们看到下面这样。然后点击右上角的设置<br><img src="/images/hexo-leancloud-plugin-installation-tutor/3.png" alt="应用设置"><br>进入之后，我们点击存储，创建Class，弹出的对话框中名字要写<code>Counter</code>，必须写Counter是因为需要和NexT主题兼容。然后ACL权限选择无限制，不然容易统计次数不正常。最后点击创建Class按钮。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/4.png" alt="创建Class"><br>创建Class的时候容易出现这个问题，如下图，刷新几次，就好了。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/5.png" alt="问题"><br>现在获取应用ID和应用Key。设置，应用key。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/6.png" alt="ID和Key"></p><h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><p>我们把LeanCloud的应用ID和应用Key写到<code>主题配置文件</code>中了，注意此时是<code>主题的配置文件config.yml</code>，找到文件中对应位置，并修改成如下：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># You can visit https://leancloud.cn get AppID and AppKey.</span></span><br><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  app_id:</span> <span class="string">填写</span></span><br><span class="line"><span class="attr">  app_key:</span> <span class="string">填写</span></span><br><span class="line">  <span class="comment"># Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security</span></span><br><span class="line">  <span class="comment"># If you don't care about security in lc counter and just want to use it directly</span></span><br><span class="line">  <span class="comment"># (without hexo-leancloud-counter-security plugin), set the `security` to `false`.</span></span><br><span class="line"><span class="attr">  security:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  betterPerformance:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>enable写成true。把<code>app_id</code>和<code>app_key</code>填上去。然后注意下面，如果没有安装hexo-leancloud-counter-security插件的话，security就填写false。betterPerformance是能够让阅读次数加载更快一些，但是显示的实际数值可能不够准确。<br>配置完了之后，<code>hexo d</code>一下，然后看看是否生效。之前的话应该就能生效了，但是现在好像不行了。如果不能生效请继续看。  </p><h1 id="Counter类未初始化问题"><a href="#Counter类未初始化问题" class="headerlink" title="Counter类未初始化问题"></a>Counter类未初始化问题</h1><p>如果你看到这里了，应该就是发现，计数功能无效。可能会出现下面的问题。Counter类未初始化。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/7.png" alt="Counter类未初始化"><br>然后它提示我们看F12的Console，显示信息如下：<br><img src="/images/hexo-leancloud-plugin-installation-tutor/8.png" alt="F12Console"></p><h1 id="hexo-leancloud-counter-security插件的安装与配置"><a href="#hexo-leancloud-counter-security插件的安装与配置" class="headerlink" title="hexo-leancloud-counter-security插件的安装与配置"></a>hexo-leancloud-counter-security插件的安装与配置</h1><p>打开<code>主题配置文件</code>，确保刚刚的那个security已经设置为true。如下：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># You can visit https://leancloud.cn get AppID and AppKey.</span></span><br><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  app_id:</span> <span class="string">填写</span></span><br><span class="line"><span class="attr">  app_key:</span> <span class="string">填写</span></span><br><span class="line">  <span class="comment"># Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security</span></span><br><span class="line">  <span class="comment"># If you don't care about security in lc counter and just want to use it directly</span></span><br><span class="line">  <span class="comment"># (without hexo-leancloud-counter-security plugin), set the `security` to `false`.</span></span><br><span class="line"><span class="attr">  security:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  betterPerformance:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>打开CMD，然后切换到博客的根目录。执行下面命令，以安装hexo-leancloud-counter-security插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-leancloud-counter-security --save</span><br></pre></td></tr></table></figure></p><p>等待安装结束之后，我们注册一个用户。命令如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo lc-counter r 用户名 密码</span><br></pre></td></tr></table></figure></p><p>用户名，密码两处用你自己起好的名字和密码替换。不用和LeanCloud的登陆名和登陆密码一样。这个用于deploy的时候输入。<br>然后打开<code>博客配置文件</code>。注意是博客的配置文件。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">leancloud_counter_security:</span></span><br><span class="line"><span class="attr">  enable_sync:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  app_id:</span> <span class="string">&lt;&lt;your</span> <span class="string">app</span> <span class="string">id&gt;&gt;</span></span><br><span class="line"><span class="attr">  app_key:</span> <span class="string">&lt;&lt;your</span> <span class="string">app</span> <span class="string">key&gt;</span></span><br><span class="line"><span class="attr">  username:</span> <span class="string">&lt;&lt;your</span> <span class="string">username&gt;&gt;</span> <span class="comment">#如留空则将在部署时询问</span></span><br><span class="line"><span class="attr">  password:</span> <span class="string">&lt;&lt;your</span> <span class="string">password&gt;&gt;</span> <span class="comment">#建议留空以保证安全性，如留空则将在部署时询问</span></span><br></pre></td></tr></table></figure></p><p>然后在<code>博客配置文件</code>中找到<code>deploy:</code>，在deploy下边添加一个。如下：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  - type:</span> <span class="string">leancloud_counter_security_sync</span></span><br></pre></td></tr></table></figure></p><p>之后去LeanCloud查看_User表中是否已经添加刚才的用户，点击存储，_User，看是否多一条记录，如下：<br><img src="/images/hexo-leancloud-plugin-installation-tutor/9.png" alt="查看用户"><br>然后对Counter表设置权限，点击存储，Counter，其他，权限设置。如下：<br><img src="/images/hexo-leancloud-plugin-installation-tutor/10.png" alt="设置权限"><br>然后弹出对话框，点击add_fields，指定用户，输入刚才用户，点击添加，<br><img src="/images/hexo-leancloud-plugin-installation-tutor/11.png" alt="add_fields权限"><br>添加成功能够看到两处不同，用户ID已经上去了。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/12.png" alt="添加成功"><br>接下来，我们同样对create进行指定用户。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/13.png" alt="create权限"><br>然后，对delete指定用户，这个注意，不添加任何用户。然后关闭。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/14.png" alt="delete权限"><br>这就设置好了。每次运行<code>hexo d</code>的时候，会扫描所有的博客，对于新的博客，Counter表里没有记录的时候，会新建一条记录。如果博客的配置文件中username和password那块儿留空的话，hexo d的时候需要手动输入密码。<br>然后我们<code>hexo d</code>一下。看看效果。  </p><h1 id="同时部署git和leancloud的问题"><a href="#同时部署git和leancloud的问题" class="headerlink" title="同时部署git和leancloud的问题"></a>同时部署git和leancloud的问题</h1><p>如果没出现这个问题，就跳过这一节<br>如果你的<code>博客配置文件</code>中的deploy已经有一个git的了，那么可能会出现下边的问题。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">FATAL bad indentation of a mapping entry at line 86, column 3:</span><br><span class="line">      - type: leancloud_counter_securi ...</span><br><span class="line">      ^</span><br><span class="line">YAMLException: bad indentation of a mapping entry at line 86, column 3:</span><br><span class="line">      - type: leancloud_counter_securi ...</span><br><span class="line">      ^</span><br><span class="line">    at generateError (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:165:10)</span><br><span class="line">    at throwError (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:171:9)</span><br><span class="line">    at readBlockMapping (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1080:7)</span><br><span class="line">    at composeNode (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1332:12)</span><br><span class="line">    at readDocument (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1492:3)</span><br><span class="line">    at loadDocuments (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1548:5)</span><br><span class="line">    at Object.load (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1569:19)</span><br><span class="line">    at Hexo.yamlHelper (E:\code\blog\node_modules\hexo\lib\plugins\renderer\yaml.js:7:15)</span><br><span class="line">    at Hexo.tryCatcher (E:\code\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Hexo.&lt;anonymous&gt; (E:\code\blog\node_modules\bluebird\js\release\method.js:15:34)</span><br><span class="line">    at Promise.then.text (E:\code\blog\node_modules\hexo\lib\hexo\render.js:61:21)</span><br><span class="line">    at tryCatcher (E:\code\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (E:\code\blog\node_modules\bluebird\js\release\promise.js:512:31)</span><br><span class="line">    at Promise._settlePromise (E:\code\blog\node_modules\bluebird\js\release\promise.js:569:18)</span><br><span class="line">    at Promise._settlePromise0 (E:\code\blog\node_modules\bluebird\js\release\promise.js:614:10)</span><br><span class="line">    at Promise._settlePromises (E:\code\blog\node_modules\bluebird\js\release\promise.js:693:18)</span><br><span class="line">    at Async._drainQueue (E:\code\blog\node_modules\bluebird\js\release\async.js:133:16)</span><br><span class="line">    at Async._drainQueues (E:\code\blog\node_modules\bluebird\js\release\async.js:143:10)</span><br><span class="line">    at Immediate.Async.drainQueues (E:\code\blog\node_modules\bluebird\js\release\async.js:17:14)</span><br><span class="line">    at runCallback (timers.js:794:20)</span><br><span class="line">    at tryOnImmediate (timers.js:752:5)</span><br><span class="line">    at processImmediate [as _immediateCallback] (timers.js:729:5)</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">FATAL duplicated mapping key at line 86, column 3:</span><br><span class="line">      type: leancloud_counter_security ...</span><br><span class="line">      ^</span><br><span class="line">YAMLException: duplicated mapping key at line 86, column 3:</span><br><span class="line">      type: leancloud_counter_security ...</span><br><span class="line">      ^</span><br><span class="line">    at generateError (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:165:10)</span><br><span class="line">    at throwError (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:171:9)</span><br><span class="line">    at storeMappingPair (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:308:7)</span><br><span class="line">    at readBlockMapping (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1071:9)</span><br><span class="line">    at composeNode (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1332:12)</span><br><span class="line">    at readBlockMapping (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1062:11)</span><br><span class="line">    at composeNode (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1332:12)</span><br><span class="line">    at readDocument (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1492:3)</span><br><span class="line">    at loadDocuments (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1548:5)</span><br><span class="line">    at Object.load (E:\code\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1569:19)</span><br><span class="line">    at Hexo.yamlHelper (E:\code\blog\node_modules\hexo\lib\plugins\renderer\yaml.js:7:15)</span><br><span class="line">    at Hexo.tryCatcher (E:\code\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Hexo.&lt;anonymous&gt; (E:\code\blog\node_modules\bluebird\js\release\method.js:15:34)</span><br><span class="line">    at Promise.then.text (E:\code\blog\node_modules\hexo\lib\hexo\render.js:61:21)</span><br><span class="line">    at tryCatcher (E:\code\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (E:\code\blog\node_modules\bluebird\js\release\promise.js:512:31)</span><br><span class="line">    at Promise._settlePromise (E:\code\blog\node_modules\bluebird\js\release\promise.js:569:18)</span><br><span class="line">    at Promise._settlePromise0 (E:\code\blog\node_modules\bluebird\js\release\promise.js:614:10)</span><br><span class="line">    at Promise._settlePromises (E:\code\blog\node_modules\bluebird\js\release\promise.js:693:18)</span><br><span class="line">    at Async._drainQueue (E:\code\blog\node_modules\bluebird\js\release\async.js:133:16)</span><br><span class="line">    at Async._drainQueues (E:\code\blog\node_modules\bluebird\js\release\async.js:143:10)</span><br><span class="line">    at Immediate.Async.drainQueues (E:\code\blog\node_modules\bluebird\js\release\async.js:17:14)</span><br></pre></td></tr></table></figure><p>这个问题，很简单，就是博客配置文件中deploy的那个位置，没写明白。如何让git和leancloud同时部署呢，如下：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">  -</span> </span><br><span class="line"><span class="attr">    type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">    repository:</span> <span class="string">git@github.com:lmnsyunhao/lmnsyunhao.github.io.git</span></span><br><span class="line"><span class="attr">    branch:</span> <span class="string">master</span></span><br><span class="line"><span class="bullet">  -</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">leancloud_counter_security_sync</span></span><br></pre></td></tr></table></figure></p><p>这样写就行了。具体为啥这样写，简单学习一下YAML语法就好了。不做赘述  </p><h1 id="部署过程中leancloud过多请求问题"><a href="#部署过程中leancloud过多请求问题" class="headerlink" title="部署过程中leancloud过多请求问题"></a>部署过程中leancloud过多请求问题</h1><p>如果没出现这个问题就跳过这一节。<br><code>deploy d</code>的过程中，还可能出现这个问题。看描述是请求过多。如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ERROR Too many requests. [429 POST https://xtppdvlr.api.lncld.net/1.1/classes/Counter]</span><br><span class="line">Error: Too many requests. [429 POST https://xtppdvlr.api.lncld.net/1.1/classes/Counter]</span><br><span class="line">    at E:\code\blog\node_modules\leancloud-storage\dist\node\request.js:163:17</span><br><span class="line">    at tryCatch (E:\code\blog\node_modules\es6-promise\dist\es6-promise.js:410:12)</span><br><span class="line">    at invokeCallback (E:\code\blog\node_modules\es6-promise\dist\es6-promise.js:425:13)</span><br><span class="line">    at publish (E:\code\blog\node_modules\es6-promise\dist\es6-promise.js:399:7)</span><br><span class="line">    at publishRejection (E:\code\blog\node_modules\es6-promise\dist\es6-promise.js:340:3)</span><br><span class="line">    at flush (E:\code\blog\node_modules\es6-promise\dist\es6-promise.js:128:5)</span><br><span class="line">    at _combinedTickCallback (internal/process/next_tick.js:131:7)</span><br><span class="line">    at process._tickCallback (internal/process/next_tick.js:180:9)</span><br></pre></td></tr></table></figure></p><blockquote><p>信息 - Too many requests.<br>含义 - 超过应用的流控限制，即超过每个应用同一时刻最多可使用的工作线程数，或者说同一时刻最多可以同时处理的数据请求。通过 控制台 &gt; 存储 &gt; API 统计 &gt; API 性能 &gt; 总览 可以查看应用产生的请求统计数据，如平均工作线程、平均响应时间等。使用 LeanCloud 商用版或企业版 的用户，如有需要，可以联系我们来调整工作线程数。</p></blockquote><p>以上是LeanCloud官方解释。<br>这个就是你第一次部署的时候，你的博文太多了，leancloud那边儿收不过来。<br>但是慢慢的我发现，在LeanCloud控制台那边儿所有的博文都已经有对应的记录了，但是每次<code>hexo d</code>时候还是报错，那是因为请求太快了。我查看了一下hexo-leancloud-counter-security的源代码，发现源代码中每次请求都会把所有博文的记录逐条查询。所以，我改了改源代码，详见<a href="/2018/06/29/hexo-leancloud-counter-security-too-many-requests-error/">hexo-leancloud-counter-security过多请求错误</a>  </p><h1 id="查看记录"><a href="#查看记录" class="headerlink" title="查看记录"></a>查看记录</h1><p>这里能够查看记录。<br><code>time</code>就是阅读次数。这里可以直接改实现骚操作。<br><code>title</code>，<code>url</code>和<code>createdAt</code>字段不要乱改，不然容易出现问题。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/22.png" alt="查看记录"></p><h1 id="安全中心保护"><a href="#安全中心保护" class="headerlink" title="安全中心保护"></a>安全中心保护</h1><p>点击设置，安全中心，Web安全域名。这个保证只有对应域名传过来的才有效，也就是说，别人用你的应用ID和应用Key是无效的。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/15.png" alt="安全中心保护"></p><h1 id="云引擎保护"><a href="#云引擎保护" class="headerlink" title="云引擎保护"></a>云引擎保护</h1><p>云引擎保护访客数量不被随意篡改。<br>点击云引擎，部署，在线编辑。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/16.png" alt="在线编辑"><br>然后点击创建函数。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/17.png" alt="创建函数"><br>弹出的框中，选择Hook，beforeUpdate，Counter，函数内填写如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> query = <span class="keyword">new</span> AV.Query(<span class="string">"Counter"</span>);</span><br><span class="line"><span class="keyword">if</span> (request.object.updatedKeys.indexOf(<span class="string">'time'</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> query.get(request.object.id).then(<span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (obj.get(<span class="string">"time"</span>) + <span class="number">1</span> !== request.object.get(<span class="string">"time"</span>)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> AV.Cloud.Error(<span class="string">'Invalid update!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后点击保存。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/18.png" alt="Counter函数定义"><br>之后，我们能看到已经多了一个函数，然后点击上边的部署。<br><img src="/images/hexo-leancloud-plugin-installation-tutor/19.png" alt="部署"><br>弹出对话框，点击部署<br><img src="/images/hexo-leancloud-plugin-installation-tutor/20.png" alt="部署确认"><br>等待，直到部署完成，如下：<br><img src="/images/hexo-leancloud-plugin-installation-tutor/21.png" alt="部署完成"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeanCloud&quot;&gt;&lt;a href=&quot;#LeanCloud&quot; class=&quot;headerlink&quot; title=&quot;LeanCloud&quot;&gt;&lt;/a&gt;LeanCloud&lt;/h1&gt;&lt;p&gt;LeanCloud能够给每篇博客统计访问量的工具。&lt;br&gt;首先注册，并登陆&lt;a hr
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yunhao.life/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yunhao.life/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://yunhao.life/tags/NexT/"/>
    
      <category term="LeanCloud" scheme="http://yunhao.life/tags/LeanCloud/"/>
    
  </entry>
  
  <entry>
    <title>Hexo d 时遇到 Host Key Verification Failed 问题</title>
    <link href="http://yunhao.life/2018/06/24/hexo-d-host-key-verification-failed-issue/"/>
    <id>http://yunhao.life/2018/06/24/hexo-d-host-key-verification-failed-issue/</id>
    <published>2018-06-23T16:09:57.000Z</published>
    <updated>2018-06-29T07:01:11.910Z</updated>
    
    <content type="html"><![CDATA[<h1 id="症状"><a href="#症状" class="headerlink" title="症状"></a>症状</h1><p>今天，在hexo d的时候遇到一个奇怪的问题，这个问题之前没出现过。自打win10更新一次以后就有问题了，不知道是不是更新的问题。以下是hexo报的log<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">Host key verification failed.</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class="line">Error: Host key verification failed.</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line"></span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (E:\code\blog\node_modules\hexo-util\lib\spawn.js:37:17)</span><br><span class="line">    at emitTwo (events.js:126:13)</span><br><span class="line">    at ChildProcess.emit (events.js:214:7)</span><br><span class="line">    at ChildProcess.cp.emit (E:\code\blog\node_modules\cross-spawn\lib\enoent.js:40:29)</span><br><span class="line">    at maybeClose (internal/child_process.js:925:16)</span><br><span class="line">    at Socket.stream.socket.on (internal/child_process.js:346:11)</span><br><span class="line">    at emitOne (events.js:116:13)</span><br><span class="line">    at Socket.emit (events.js:211:7)</span><br><span class="line">    at Pipe._handle.close [as _onclose] (net.js:567:12)</span><br></pre></td></tr></table></figure></p><p>大概说的是ssh key认证失败，不能读取远程库。然后我把自己电脑上的rsa_pub重新放到了github上一次，结果还是失败。  </p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>要提前用ssh连一下github，把github的公钥记录在本地的know_hosts里面就好了。具体方法是，在cmd中输入如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure></p><p>然后输入yes。<br>之后再进行<code>hexo d</code>的时候就没这个问题了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;症状&quot;&gt;&lt;a href=&quot;#症状&quot; class=&quot;headerlink&quot; title=&quot;症状&quot;&gt;&lt;/a&gt;症状&lt;/h1&gt;&lt;p&gt;今天，在hexo d的时候遇到一个奇怪的问题，这个问题之前没出现过。自打win10更新一次以后就有问题了，不知道是不是更新的问题。以下是he
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yunhao.life/categories/Hexo/"/>
    
    
      <category term="GitHub" scheme="http://yunhao.life/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://yunhao.life/tags/Hexo/"/>
    
      <category term="Git" scheme="http://yunhao.life/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Do U Need A Ladder ?</title>
    <link href="http://yunhao.life/2018/06/20/do-you-need-a-ladder/"/>
    <id>http://yunhao.life/2018/06/20/do-you-need-a-ladder/</id>
    <published>2018-06-20T14:09:21.000Z</published>
    <updated>2018-06-25T06:59:08.144Z</updated>
    
    <content type="html"><![CDATA[<h1 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h1><p>请将本文中所有的“暗影袜子们”替换成如下字眼<br><img src="/images/do-you-need-a-ladder/socks.png" alt="暗影袜子"></p><h1 id="安装SS"><a href="#安装SS" class="headerlink" title="安装SS"></a>安装SS</h1><p>在服务器端操作。<br>我购买的是Digital Ocean的服务器，Ubuntu16.04系统。<br>确认当前是root用户，通过pip安装。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install python-pip</span><br><span class="line">pip install --upgrade pip</span><br><span class="line">pip install 暗影袜子们</span><br></pre></td></tr></table></figure></p><h1 id="pip无法安装的问题"><a href="#pip无法安装的问题" class="headerlink" title="pip无法安装的问题"></a>pip无法安装的问题</h1><p>在上边安装的时候，可能会出现下面的问题，如果出现了，就解决一下，没出现当然就不用管这一节。报错如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"/usr/bin/pip"</span>, line 9, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from pip import main</span><br><span class="line">ImportError: cannot import name main</span><br></pre></td></tr></table></figure></p><p>解决方法是修改<code>/usr/bin/pip</code>文件，改成下面的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pip import __main__</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    sys.exit(__main__._main())</span><br></pre></td></tr></table></figure></p><h1 id="配置IPv4连接"><a href="#配置IPv4连接" class="headerlink" title="配置IPv4连接"></a>配置IPv4连接</h1><p>在服务器端操作。<br>创建配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/暗影袜子们.json</span><br></pre></td></tr></table></figure></p><p>json文件中填写，如下<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"服务器ip"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">8388</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"自己设置的密码"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>字段名称</th><th>各个字段的含义</th></tr></thead><tbody><tr><td>Name</td><td>解释说明</td></tr><tr><td>server</td><td>监听的服务器地址</td></tr><tr><td>server_port</td><td>监听的服务器端口</td></tr><tr><td>local_address</td><td>本地监听的地址</td></tr><tr><td>local_port</td><td>本地坚挺的端口</td></tr><tr><td>password</td><td>登陆用的密码</td></tr><tr><td>timeout</td><td>按秒计算</td></tr><tr><td>method</td><td>加密方法 默认是”aes-256-cfb”</td></tr><tr><td>fast_open</td><td>快速打开，TCP_FASTOPEN, 填写true或者false</td></tr><tr><td>workers</td><td>number of workers, available on Unix/Linux</td></tr></tbody></table><p>大家在设置的时候最好不要弄错了，就想例子中的那样。一个空格最好都不要错，否则容易出莫名其妙的问题。  </p><h1 id="配置IPv6连接"><a href="#配置IPv6连接" class="headerlink" title="配置IPv6连接"></a>配置IPv6连接</h1><p>在服务器端操作<br>如果你的服务器有ipv6的公网地址，那么你可以通过ipv6来连接你的VPS。那么配置文件中就如下填写：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"::"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">8388</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"自己设置的密码"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>就是server字段填::，这么填以后，你可以使用ipv6连接，也可以使用ipv4连接，亲测。  </p><h1 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h1><p>在客户端操作<br>客户端点选“添加服务器”，填写“地址”、“端口”、“加密方法”和“密码”即可。其中“端口”、“加密方法”和“密码”与前面设置的服务器配置相同。<br>如果服务器支持IPv4和IPv6双栈，那么客户端实际可以配置两个服务器参数，其仅有“地址”不相同。对于IPv4，填写服务器的IPv4地址；对于IPv6，填写服务器的IPv6地址（末尾不用加/64，也不用写[]）  </p><h1 id="启动ssserver服务"><a href="#启动ssserver服务" class="headerlink" title="启动ssserver服务"></a>启动ssserver服务</h1><p>在服务器端操作。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/暗影袜子们.json</span><br></pre></td></tr></table></figure></p><p>输入命令就能够开启ssserver服务了<br>上面的命令是工作在前台的进程。如果想把ssserver放到后台工作。那么用下面的命令启动和停止。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/暗影袜子们.json -d start</span><br><span class="line">ssserver -c /etc/暗影袜子们.json -d stop</span><br></pre></td></tr></table></figure></p><p>如果你发现你的ssserver不支持-d命令的话，那么就是你安装暗影袜子们时候有问题。重装吧就。  </p><h1 id="测试连通性"><a href="#测试连通性" class="headerlink" title="测试连通性"></a>测试连通性</h1><p>为了保险起见，客户端选择IPv4连接服务器。<br>解释一下<code>系统代理模式</code>中的<code>全局模式</code>和<code>PAC模式</code>，PAC就是一个规则，定义了有哪些网站在国内，有哪些网站在国外。如果选择了全局模式，不管访问国内还是国外的网站，都会走VPS代理；而PAC模式，只有在国外的走代理，国内的不走。但是PAC规则更新慢的话，有时候还得调成全局模式。全局模式访问国内网站，比PAC访问国内网站要慢一点，因为走了代理。<br>客户端设置好之后，看是不是能够正常的登上梯子（客户端登陆<code>youtube.com</code>）。如果正常，那么就成功了。<br>设置客户端中服务器为IPv6地址的，同样访问上述网站，若都能很快正常打开，则成功。<br>可以测试一下支不支持IPv6，访问网站<a href="https://test-ipv6.com/" target="_blank" rel="noopener">IPv6测试</a></p><h1 id="配置systemd开机启动"><a href="#配置systemd开机启动" class="headerlink" title="配置systemd开机启动"></a>配置systemd开机启动</h1><p>在服务器端操作<br>systemd配置文件一般存在于<code>/lib/systemd/system/</code>和<code>/etc/systemd/system/</code>这两个文件夹下，我们需要在<code>/lib/systemd/system</code>下创建配置文件。如下：如果创建过程中有权限问题，自觉用<code>sudo</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /lib/systemd/system</span><br><span class="line">vim ssserver.service</span><br></pre></td></tr></table></figure></p><p>文件中写如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># /lib/systemd/system/ssserver.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=ssserver</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/bin/ssserver -c /etc/暗影袜子们.json</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p><p>创建了文件之后，需要重新加载配置一下。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure></p><p>然后试试把刚才创建的ssserver.service启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start ssserver.service</span><br></pre></td></tr></table></figure></p><p>如果没报任何信息的话，查看一下状态。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status ssserver.service</span><br></pre></td></tr></table></figure></p><p>如果显示running的话，那么就是配置成功了，然后设置一下开机启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> ssserver.service</span><br></pre></td></tr></table></figure></p><p>到这里，已经达到目的了，下面是一些有意思的操作，感兴趣的可以看一下。不感兴趣的不看也ok。  </p><h1 id="配置全局代理-Proxifier"><a href="#配置全局代理-Proxifier" class="headerlink" title="配置全局代理+Proxifier"></a>配置全局代理+Proxifier</h1><p>配置这个的目的是让VPS和本地间走ipv6流量，然后系统代理模式选择全局代理，也就是说让所有的网络访问都走VPS。这样的话，也就是说所有的网络都走ipv6。这种情况下会有一些问题。有的软件不支持用前面这种形式访问网络。这个时候我们就需要一个叫做Proxifier的软件来给这些软件搞一下，让他们也能正常了。因为都是ipv6，所以就免流量了，而且不用登录校园网，这就是我们要的效果。<br>首先，VPS那边得是ipv6能够访问的，就是配好了上边说的ipv6连接，其次，本地也需要有ipv6的地址。二者缺一不可。然后。配置一下Proxifier。配置方法如下：<br>打开Proxifier，然后Profile，Proxy Servers，点击右侧Add。<br><img src="/images/do-you-need-a-ladder/1.png" alt="1"><br>如下这样添加。点击确定。<br><img src="/images/do-you-need-a-ladder/2.png" alt="1"><br>添加之后如下图：<br><img src="/images/do-you-need-a-ladder/3.png" alt="1"><br>打开，Profile，Proxification Rules。<br><img src="/images/do-you-need-a-ladder/4.png" alt="1"><br>如下设置<br><img src="/images/do-you-need-a-ladder/5.png" alt="1"><br>点击Profile，Name Resolution：<br><img src="/images/do-you-need-a-ladder/6.png" alt="1"><br>如下设置：<br><img src="/images/do-you-need-a-ladder/7.png" alt="1"><br>这个时候，注销校园网络登陆。然后看看行不行？如果qq能正常使用，说明大功告成了。下次再使用的时候，ipv6连接+Proxifier都打开，就能够免流量了。<br>我用的是有线连接的校园网（没登录），没测试无线能不能用，不过如果无线连接的时候，本地有ipv6地址的话，应该就能用。  </p><p>这时候会出问题，比如使用localhost:4000调试hexo时候，会无法访问。感觉是dns问题，因为现在是ipv6，可能会解析到ipv6的地址，然后proxifier会报错说，没法解决ipv4和ipv6混合使用的问题。这个时候不用localhost:4000，访问127.0.0.1:4000就能调试hexo了。  </p><h1 id="Google-BBR-加速"><a href="#Google-BBR-加速" class="headerlink" title="Google BBR 加速"></a>Google BBR 加速</h1><p>说是能给网络加速，实际效果感觉并不明显，还是写一下吧。<br>root登陆服务器，输入下面命令。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br><span class="line">chmod +x bbr.sh</span><br><span class="line">./bbr.sh</span><br></pre></td></tr></table></figure></p><p>安装完事儿之后会让重启服务器，然后就重启吧。<br>输入下面命令。验证是否安装最新内核并开启了BBR。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure></p><p>查看一下；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure></p><p>上面结果中，看看等号后边带不带bbr，带就行。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br></pre></td></tr></table></figure></p><p>上面结果应该等于bbr。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.core.default_qdisc</span><br></pre></td></tr></table></figure></p><p>上面结果应该等于fq。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure></p><p>上面结果中，看看有没有tcp_bbr，说明已经启动。  </p><h1 id="过了两天"><a href="#过了两天" class="headerlink" title="过了两天"></a>过了两天</h1><p>我保证我这两天，没动服务器，也没开电脑。然后就出现了一个状况。<br>ipv6可以连上服务器，但是ipv4死活连不上服务器。经过一番排查，我感觉是服务器那边的问题。然后，于此同时我用ssh竟然没法连接DigitalOcean的服务器了。闹心。<br>我这个DigitalOcean最开始新建Droplet的时候，没有选ssh。不过，最开始的时候是能够用ssh连的，然后过了两天就连接超时，只能通过网页端的console连接。<br>我查了不少教程又看了官方文档。并不会解决，然后我将droplet的系统重装了。然后依旧是这个问题。<br>然后，我就把这个droplet删了。新建了一个droplet，新建时候上传了ssh公钥，并选择了对应的公钥。然后，当然ssh的连接超时的问题就解决了。<br>然后照着我上边说的又走了一遍，ipv4连不上的问题也解决了。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;映射&quot;&gt;&lt;a href=&quot;#映射&quot; class=&quot;headerlink&quot; title=&quot;映射&quot;&gt;&lt;/a&gt;映射&lt;/h1&gt;&lt;p&gt;请将本文中所有的“暗影袜子们”替换成如下字眼&lt;br&gt;&lt;img src=&quot;/images/do-you-need-a-ladder/socks
      
    
    </summary>
    
      <category term="服务器" scheme="http://yunhao.life/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Ladder" scheme="http://yunhao.life/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/Ladder/"/>
    
    
      <category term="Ladder" scheme="http://yunhao.life/tags/Ladder/"/>
    
      <category term="Proxifier" scheme="http://yunhao.life/tags/Proxifier/"/>
    
      <category term="VPS" scheme="http://yunhao.life/tags/VPS/"/>
    
      <category term="服务器" scheme="http://yunhao.life/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="代理" scheme="http://yunhao.life/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="DigitalOcean" scheme="http://yunhao.life/tags/DigitalOcean/"/>
    
  </entry>
  
  <entry>
    <title>Windows10 开启OpenSSH服务 CMD配置SSH远程连接服务</title>
    <link href="http://yunhao.life/2018/06/19/windows-openssh-and-ssh-remote-connection/"/>
    <id>http://yunhao.life/2018/06/19/windows-openssh-and-ssh-remote-connection/</id>
    <published>2018-06-19T08:34:55.000Z</published>
    <updated>2018-06-19T14:35:28.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开启OpenSSH服务"><a href="#开启OpenSSH服务" class="headerlink" title="开启OpenSSH服务"></a>开启OpenSSH服务</h1><p>想要cmd能够使用ssh远程连接服务。我们需要打开OpenSSH服务。<br>首先打开设置，快捷键windows键+I。<br><img src="/images/windows-openssh-and-ssh-remote-connection/setting.png" alt="设置"><br>然后打开应用。然后看到右侧有管理可选功能。点击管理可选功能<br><img src="/images/windows-openssh-and-ssh-remote-connection/application.png" alt="应用"><br>如果列表中有OpenSSH 客户端，或者是OpenSSH Client字样的东西，说明你的电脑已经开启了OpenSSH服务了。<br><img src="/images/windows-openssh-and-ssh-remote-connection/add-function.png" alt="可选功能"><br>如果没开启OpenSSH服务，那么就点击添加功能，然后把OpenSSH安装了就行了。<br><img src="/images/windows-openssh-and-ssh-remote-connection/openssh.png" alt="OpenSSH"><br>安装了之后，重启一下电脑，然后才能在CMD中使用ssh远程连接的服务。<br><img src="/images/windows-openssh-and-ssh-remote-connection/openssh-functions.png" alt="OpenSSH功能"><br>我们可以看到打开OpenSSH服务之后，也就开启了上图的功能。  </p><h1 id="SSH远程连接"><a href="#SSH远程连接" class="headerlink" title="SSH远程连接"></a>SSH远程连接</h1><p>我们打开CMD或者是powershell之后，就能够发现可以使用ssh远程连接服务了。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;开启OpenSSH服务&quot;&gt;&lt;a href=&quot;#开启OpenSSH服务&quot; class=&quot;headerlink&quot; title=&quot;开启OpenSSH服务&quot;&gt;&lt;/a&gt;开启OpenSSH服务&lt;/h1&gt;&lt;p&gt;想要cmd能够使用ssh远程连接服务。我们需要打开OpenSSH服务
      
    
    </summary>
    
      <category term="Windows" scheme="http://yunhao.life/categories/Windows/"/>
    
    
      <category term="OpenSSH" scheme="http://yunhao.life/tags/OpenSSH/"/>
    
      <category term="Windows" scheme="http://yunhao.life/tags/Windows/"/>
    
      <category term="CMD" scheme="http://yunhao.life/tags/CMD/"/>
    
  </entry>
  
  <entry>
    <title>Windows10 生成 SSH密钥 GitHub配置</title>
    <link href="http://yunhao.life/2018/06/19/windows-github-ssh-key/"/>
    <id>http://yunhao.life/2018/06/19/windows-github-ssh-key/</id>
    <published>2018-06-19T08:30:35.000Z</published>
    <updated>2018-06-29T07:01:28.635Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SSH的简介"><a href="#SSH的简介" class="headerlink" title="SSH的简介"></a>SSH的简介</h1><p>SSH技术是指通信的双方A，B，分别有自己的公钥和私钥，公钥负责加密信息，私钥负责解密信息。设定是这样的A公钥加密的信息，只能通过A的私钥来解密，不能通过其他的私钥来解密，而且通过A的公钥很难推断出A的私钥。<br>通信开始前，双方得知对方的公钥，A给B发送数据，用B的公钥来加密。B给A发送数据用A的公钥来加密。<br>此项技术能够保证通信之间的安全性。即使信息被第三方获取，也无法解密。避免了信息被窃取，篡改，和冒充的情况。  </p><h1 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h1><p>首先看看，C盘用户目录(例如：C:\Users\yunhao)下，有没有.ssh这个文件夹。如果有就不用生成，没有就生成一下。或者.ssh文件夹里面没有东西的话也需要生成<br>Windows环境下生成SSH密钥和Ubuntu下生成密钥的方法几乎相仿。windows下生成可以借助GitBash来生成。在某个文件夹下右键，然后打开GitBash。如果不想用GitBash来生成key的话。那么请看本文OpenSSH服务一节<br>输入<code>ssh-keygen</code>回车。生成过程中，会有提示，然后会输入两次密码，这个密码是在使用ssh时候用的，如果不想设置密码的话，就直接回车就好了。  </p><h1 id="GitHub上配置"><a href="#GitHub上配置" class="headerlink" title="GitHub上配置"></a>GitHub上配置</h1><p>登陆Github网站，找到个人设置界面。左侧有 SSH and GPG keys 类似字样的选项，点击。然后新建一个 SSH 的 key， 把<code>C:\Users\username\.ssh\id_rsa.pub</code>中的内容复制过去。然后保存。之后就OK了。  </p><h1 id="OpenSSH服务"><a href="#OpenSSH服务" class="headerlink" title="OpenSSH服务"></a>OpenSSH服务</h1><p>还有一种方法能够生成密钥。就是开启Windows的OpenSSH服务。之后使用cmd输入ssh-keygen命令来生成。<br>开启方法如下：<br><a href="/2018/06/19/windows-openssh-and-ssh-remote-connection/">开启OpenSSH方法</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SSH的简介&quot;&gt;&lt;a href=&quot;#SSH的简介&quot; class=&quot;headerlink&quot; title=&quot;SSH的简介&quot;&gt;&lt;/a&gt;SSH的简介&lt;/h1&gt;&lt;p&gt;SSH技术是指通信的双方A，B，分别有自己的公钥和私钥，公钥负责加密信息，私钥负责解密信息。设定是这样的A公
      
    
    </summary>
    
      <category term="Windows" scheme="http://yunhao.life/categories/Windows/"/>
    
    
      <category term="GitHub" scheme="http://yunhao.life/tags/GitHub/"/>
    
      <category term="Git" scheme="http://yunhao.life/tags/Git/"/>
    
      <category term="OpenSSH" scheme="http://yunhao.life/tags/OpenSSH/"/>
    
      <category term="Windows" scheme="http://yunhao.life/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>GoDaddy 域名 托管于腾讯云解析</title>
    <link href="http://yunhao.life/2018/06/18/godaddy-domain-dns-on-tencent-cloud/"/>
    <id>http://yunhao.life/2018/06/18/godaddy-domain-dns-on-tencent-cloud/</id>
    <published>2018-06-18T14:57:39.000Z</published>
    <updated>2018-06-27T13:19:58.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="腾讯云获取域名服务器"><a href="#腾讯云获取域名服务器" class="headerlink" title="腾讯云获取域名服务器"></a>腾讯云获取域名服务器</h1><p>注册并登陆了腾讯云之后，找到控制台。<br><img src="/images/godaddy-domain-dns-on-tencent-cloud/tencent-control-panel.png" alt="控制台"><br>然后找到域名服务，云解析。<br><img src="/images/godaddy-domain-dns-on-tencent-cloud/service.png" alt="云解析"><br>然后点击添加解析。将你要解析的域名加进来。<br><img src="/images/godaddy-domain-dns-on-tencent-cloud/add-parsing.png" alt="添加解析"><br>添加域名就是你购买的域名，项目就默认就行。<br><img src="/images/godaddy-domain-dns-on-tencent-cloud/parsing-info.png" alt="添加解析"><br>然后能看到添加的域名，点击后边的解析。<br><img src="/images/godaddy-domain-dns-on-tencent-cloud/parsing.png" alt="解析"><br>我们可以看到上边的域名服务器的地址。并且它提示我们去到域名注册商处更改地址。<br><img src="/images/godaddy-domain-dns-on-tencent-cloud/dns-address.png" alt="DNS地址"></p><h1 id="GoDaddy自定义域名服务器"><a href="#GoDaddy自定义域名服务器" class="headerlink" title="GoDaddy自定义域名服务器"></a>GoDaddy自定义域名服务器</h1><p>首先是去<a href="https://sg.godaddy.com/zh/" target="_blank" rel="noopener">GoDaddy</a>登陆账户（登陆密码还得要求有大写英文字母，小写英文字母，还有数字）。然后找到我的产品。<br><img src="/images/godaddy-domain-dns-on-tencent-cloud/godaddy-production.png" alt="我的产品"><br>然后是找到需要托管的域名的DNS。<br><img src="/images/godaddy-domain-dns-on-tencent-cloud/godaddy-dns.png" alt="DNS"><br>点击了DNS之后，我们可以看到，记录和域名服务器俩栏。我们需要把下面的域名服务器改成自定义的，然后将腾讯云上边的那个域名服务器的地址填上。刷新一下界面，我们就能够看到记录的位置显示信息，表示已经脱离了Godaddy的管理了。<br><img src="/images/godaddy-domain-dns-on-tencent-cloud/customized-dns.png" alt="自定义域名服务器"><br>这个时候我们就只需要在腾讯云上添加解析的记录就ok了。  </p><h1 id="腾讯云添加记录"><a href="#腾讯云添加记录" class="headerlink" title="腾讯云添加记录"></a>腾讯云添加记录</h1><p>添加记录的过程中，A类型是将域名指向IP，CNAME类型是将域名指向另一个域名。<br><img src="/images/godaddy-domain-dns-on-tencent-cloud/add-record.png" alt="添加记录"><br>比如<code>主机记录</code>填写<code>@</code>，<code>记录类型</code>写<code>CNAME</code>，线路类型默认，<code>记录值</code>写<code>lmnsyunhao.github.io</code>，TTL600。这个就是表示在访问yunhao.life的时候就会解析到lmnsyunhao.github.io这个域名。相当于直接访问lmnsyunhao.github.io这个域名。<br>比如<code>主机记录</code>填写<code>www</code>，<code>记录类型</code>写<code>A</code>，线路类型默认，<code>记录值</code>写<code>8.8.8.8</code>，TTL600。这个表示在访问<code>www.yunhao.life</code>的时候会解析到8.8.8.8。相当于直接访问8.8.8.8这个IP。<br><code>@</code>主机记录表示三级域名处为空。如果记录类型选<code>CNAME</code>那么记录值只能写域名才有效，记录类型选A，记录值只能写IP地址才有效。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;腾讯云获取域名服务器&quot;&gt;&lt;a href=&quot;#腾讯云获取域名服务器&quot; class=&quot;headerlink&quot; title=&quot;腾讯云获取域名服务器&quot;&gt;&lt;/a&gt;腾讯云获取域名服务器&lt;/h1&gt;&lt;p&gt;注册并登陆了腾讯云之后，找到控制台。&lt;br&gt;&lt;img src=&quot;/image
      
    
    </summary>
    
      <category term="服务器" scheme="http://yunhao.life/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="域名" scheme="http://yunhao.life/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%9F%9F%E5%90%8D/"/>
    
    
      <category term="域名" scheme="http://yunhao.life/tags/%E5%9F%9F%E5%90%8D/"/>
    
      <category term="DNS" scheme="http://yunhao.life/tags/DNS/"/>
    
      <category term="GoDaddy" scheme="http://yunhao.life/tags/GoDaddy/"/>
    
      <category term="腾讯云" scheme="http://yunhao.life/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>ACM HDU 2089 题解 数位DP</title>
    <link href="http://yunhao.life/2018/06/17/acm-hdu-2089-digital-dp/"/>
    <id>http://yunhao.life/2018/06/17/acm-hdu-2089-digital-dp/</id>
    <published>2018-06-17T08:34:42.000Z</published>
    <updated>2018-06-19T14:33:59.545Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>不要62  </p><h1 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h1><p>Time Limit: 1000/1000 MS (Java/Others)<br>Memory Limit: 32768/32768 K (Java/Others)  </p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>杭州人称那些傻乎乎粘嗒嗒的人为62（音：laoer）。<br>杭州交通管理局经常会扩充一些的士车牌照，新近出来一个好消息，以后上牌照，不再含有不吉利的数字了，这样一来，就可以消除个别的士司机和乘客的心理障碍，更安全地服务大众。<br>不吉利的数字为所有含有4或62的号码。例如：<br>62315 73418 88914<br>都属于不吉利号码。但是，61152虽然含有6和2，但不是62连号，所以不属于不吉利数字之列。<br>你的任务是，对于每次给出的一个牌照区间号，推断出交管局今次又要实际上给多少辆新的士车上牌照了。  </p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>输入的都是整数对$n,m$$(0 \lt n \le m \lt 1000000)$，如果遇到都是0的整数对，则输入结束。  </p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>对于每个整数对，输出一个不含有不吉利数字的统计个数，该数值占一行位置。  </p><h1 id="样本"><a href="#样本" class="headerlink" title="样本"></a>样本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 100</span><br><span class="line">0 0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">80</span><br></pre></td></tr></table></figure><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>数位DP。这是记忆化搜索，从高位向低位dfs。<br>首先s数组中存储数字是从低位到高位存储的，比如100，在s数组中就是[0,0,1]这么存的。len是数的位数<br>dp[i][0]表示在第i+1位不是6并且低i位没有限制的情况下，低i位中满足条件的数的个数。<br>dp[i][1]表示在第i+1位是6并且低i位没有限制的情况下，低i为中满足条件的数的个数。<br>dp数组用于记忆化搜索。<br>说一下代码吧。<br>这道题是求n到m中（含边界数）满足条件的个数，也就是求m以内的满足条件个数，再减去n-1以内满足条件个数。<br>说下dfs。pos是当前位数；lim是当前位数的上限值，-1代表没上限，0到9之间的数字代表有上限；prev是高一位的数字是几。<br>首先判断边界，pos&lt;0的情况代表找到了一个数，所以要return 1;这个为啥不return 0?自己想一下，return 0的话结果永远都是0了。<br>然后判断是不是没限制，即lim==-1并且，dp对应的位置不是0，即之前求过并存储下来了，那么就直接返回。否则就继续求。<br>然后就是循环次数了。up是循环次数。<br>for循环的意义是对于pos位是各种数字的情况下，继续dfs pos-1位的情况。<br>循环中，如果是4那么跳过；如果是2并且上一位是4直接跳过；如果i和lim相等，即这一位到了上限，那么在继续进行dfs的时候，下一位也要注意上限的问题，免得超了，所以要把s[pos-1]作为参数，不然的话，就直接传-1了。<br>循环结束后进行记录，如果当前没有上限，即这个值在之后还有利用价值，那么就计入dp，否则，不计入。然后返回这个tmp，tmp是结果。  </p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">10</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> pos, <span class="keyword">int</span> lim, <span class="keyword">int</span> prev)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(pos &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(lim == <span class="number">-1</span> &amp;&amp; dp[pos][prev == <span class="number">6</span>] != <span class="number">0</span>) <span class="keyword">return</span> dp[pos][prev == <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> up = lim==<span class="number">-1</span>?<span class="number">9</span>:lim;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= up; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">4</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">2</span> &amp;&amp; prev == <span class="number">6</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(i == lim)</span><br><span class="line">            tmp += dfs(pos<span class="number">-1</span>, s[pos<span class="number">-1</span>], i);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            tmp += dfs(pos<span class="number">-1</span>, <span class="number">-1</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(lim == <span class="number">-1</span>)&#123;</span><br><span class="line">        dp[pos][prev == <span class="number">6</span>] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    len = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(s, <span class="number">0</span>, <span class="keyword">sizeof</span> s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(num &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        s[len++] = num % <span class="number">10</span>;</span><br><span class="line">        num /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dfs(len<span class="number">-1</span>, s[len<span class="number">-1</span>], <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m))&#123;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span> &amp;&amp; m == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, solve(m)-solve(n<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;不要62  &lt;/p&gt;
&lt;h1 id=&quot;限制&quot;&gt;&lt;a href=&quot;#限制&quot; class=&quot;headerlink&quot; title=&quot;限制&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="ACM" scheme="http://yunhao.life/categories/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/categories/ACM/DP/"/>
    
      <category term="数位DP" scheme="http://yunhao.life/categories/ACM/DP/%E6%95%B0%E4%BD%8DDP/"/>
    
    
      <category term="ACM" scheme="http://yunhao.life/tags/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/tags/DP/"/>
    
      <category term="HDU" scheme="http://yunhao.life/tags/HDU/"/>
    
      <category term="数位DP" scheme="http://yunhao.life/tags/%E6%95%B0%E4%BD%8DDP/"/>
    
  </entry>
  
  <entry>
    <title>ACM LightOJ 1422 题解 区间DP</title>
    <link href="http://yunhao.life/2018/06/14/acm-lightoj-1422-dp-on-segment/"/>
    <id>http://yunhao.life/2018/06/14/acm-lightoj-1422-dp-on-segment/</id>
    <published>2018-06-14T07:19:43.000Z</published>
    <updated>2018-06-17T02:23:32.290Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>1422 - Halloween Costumes  </p><h1 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h1><p>Time Limit: 2 second(s)<br>Memory Limit: 32 MB  </p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>Gappu has a very busy weekend ahead of him. Because, next weekend is Halloween, and he is planning to attend as many parties as he can. Since it’s Halloween, these parties are all costume parties, Gappu always selects his costumes in such a way that it blends with his friends, that is, when he is attending the party, arranged by his comic-book-fan friends, he will go with the costume of Superman, but when the party is arranged contest-buddies, he would go with the costume of ‘Chinese Postman’.<br>Since he is going to attend a number of parties on the Halloween night, and wear costumes accordingly, he will be changing his costumes a number of times. So, to make things a little easier, he may put on costumes one over another (that is he may wear the uniform for the postman, over the superman costume). Before each party he can take off some of the costumes, or wear a new one. That is, if he is wearing the Postman uniform over the Superman costume, and wants to go to a party in Superman costume, he can take off the Postman uniform, or he can wear a new Superman uniform. But, keep in mind that, Gappu doesn’t like to wear dresses without cleaning them first, so, after taking off the Postman uniform, he cannot use that again in the Halloween night, if he needs the Postman costume again, he will have to use a new one. He can take off any number of costumes, and if he takes off $k$ of the costumes, that will be the last $k$ ones (e.g. if he wears costume $A$ before costume $B$, to take off $A$, first he has to remove $B$).<br>Given the parties and the costumes, find the minimum number of costumes Gappu will need in the Halloween night.  </p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>Input starts with an integer $T (\le 200)$, denoting the number of test cases.<br>Each case starts with a line containing an integer $N$ $(1 \le N \le 100)$ denoting the number of parties. Next line contains $N$ integers, where the $i^{th}$ integer $c_i$ $(1 \le c_i \le 100)$ denotes the costume he will be wearing in party $i$. He will attend party 1 first, then party 2, and so on.  </p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>For each case, print the case number and the minimum number of required costumes.  </p><h1 id="样本"><a href="#样本" class="headerlink" title="样本"></a>样本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br><span class="line">1 2 1 2</span><br><span class="line">7</span><br><span class="line">1 2 1 1 3 2 1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Case 1: 3</span><br><span class="line">Case 2: 4</span><br></pre></td></tr></table></figure><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>区间划分DP。dp[a][b]表示区间[a,b]内最少需要多少件戏服。<br>对于不同长度的每个区间，dp[a][b]最大是b-a+1，然后对以下情况考虑，选出最小值<br>第一，如果区间的两端的戏服是一样的，那么就说明这件戏服在这个区间里可以一直穿着，即dp[a+1][b-1]+1<br>第二，对区间进行划分，对于每个划分，选择最小值。min(dp[a][b], dp[a][k]+dp[k+1][b])<br>第三，对区间划分的时候，如果中间有个数，等于两端的数。即num[k] == num[b]并且num[k] == num[a]，这种情况下，可以省一件戏服，可以从头穿到尾。所以是dp[a][k]+dp[k+1][b]-1，与dp[a][b]比较，选择最小值<br>大概的思路就是这样。<br>看下代码，第21行是对区间长度迭代，第22行是对区间起始节点进行迭代，29行是对不同的划分位置进行迭代。  </p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t))&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> w = <span class="number">1</span>; w &lt;= t; w++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n-i; j++)&#123;</span><br><span class="line">                    dp[j][j+i] = i+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(num[j] == num[j+i])&#123;</span><br><span class="line">                        dp[j][j+i] = min(dp[j][j+i], dp[j+<span class="number">1</span>][j+i<span class="number">-1</span>]+<span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k = j; k &lt; j+i; k++)&#123;</span><br><span class="line">                        dp[j][j+i] = min(dp[j][j+i], dp[j][k]+dp[k+<span class="number">1</span>][j+i]);</span><br><span class="line">                        <span class="keyword">if</span>(k != j &amp;&amp; k != j+i &amp;&amp; num[k] == num[j] &amp;&amp; num[k] == num[j+i])&#123;</span><br><span class="line">                            dp[j][j+i] = min(dp[j][j+i], dp[j][k]+dp[k+<span class="number">1</span>][j+i]<span class="number">-1</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>, w, dp[<span class="number">0</span>][n<span class="number">-1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;1422 - Halloween Costumes  &lt;/p&gt;
&lt;h1 id=&quot;限制&quot;&gt;&lt;a href=&quot;#限制&quot; class=&quot;heade
      
    
    </summary>
    
      <category term="ACM" scheme="http://yunhao.life/categories/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/categories/ACM/DP/"/>
    
      <category term="区间DP" scheme="http://yunhao.life/categories/ACM/DP/%E5%8C%BA%E9%97%B4DP/"/>
    
    
      <category term="ACM" scheme="http://yunhao.life/tags/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/tags/DP/"/>
    
      <category term="区间DP" scheme="http://yunhao.life/tags/%E5%8C%BA%E9%97%B4DP/"/>
    
      <category term="LightOJ" scheme="http://yunhao.life/tags/LightOJ/"/>
    
  </entry>
  
  <entry>
    <title>ACM POJ 1651 题解 区间DP</title>
    <link href="http://yunhao.life/2018/06/11/acm-poj-1651-dp-on-segment/"/>
    <id>http://yunhao.life/2018/06/11/acm-poj-1651-dp-on-segment/</id>
    <published>2018-06-11T05:33:38.000Z</published>
    <updated>2018-06-11T06:34:41.559Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Multiplication Puzzle  </p><h1 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h1><p>Time Limit: 1000MS<br>Memory Limit: 65536K  </p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>The multiplication puzzle is played with a row of cards, each containing a single positive integer. During the move player takes one card out of the row and scores the number of points equal to the product of the number on the card taken and the numbers on the cards on the left and on the right of it. It is not allowed to take out the first and the last card in the row. After the final move, only two cards are left in the row.<br>The goal is to take cards in such order as to minimize the total number of scored points.<br>For example, if cards in the row contain numbers 10 1 50 20 5, player might take a card with 1, then 20 and 50, scoring<br>$$10 \times 15 \times 0 + 50 \times 20 \times 5 + 10 \times 50 \times 5 = 500+5000+2500 = 8000$$<br>If he would take the cards in the opposite order, i.e. 50, then 20, then 1, the score would be<br>$$1 \times 50 \times 20 + 1 \times 20 \times 5 + 10 \times 1 \times 5 = 1000+100+50 = 1150$$  </p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>The first line of the input contains the number of cards $N$ $(3 \le N \le 100)$. The second line contains $N$ integers in the range from $1$ to $100$, separated by spaces.  </p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>Output must contain a single integer - the minimal score.  </p><h1 id="样本"><a href="#样本" class="headerlink" title="样本"></a>样本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">10 1 50 50 20 5</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3650</span><br></pre></td></tr></table></figure><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>划分区间DP。无条件划分区间。dp[a][b]是区间[a,b]的最小的分值。<br>举个例子。序列$1,2,3,4,5$，这就是取$2,3,4$这三个，一共有$6$种组合方式：  </p><ul><li>$2,3,4: \quad 1 \times 2 \times 3+1 \times 3 \times 4+1 \times 4 \times 5$  </li><li>$2,4,3: \quad 1 \times 2 \times 3+3 \times 4 \times 5+1 \times 3 \times 5$  </li><li>$3,2,4: \quad 2 \times 3 \times 4+1 \times 2 \times 4+1 \times 4 \times 5$  </li><li>$3,4,2: \quad 2 \times 3 \times 4+2 \times 4 \times 5+1 \times 2 \times 5$  </li><li>$4,2,3: \quad 3 \times 4 \times 5+1 \times 2 \times 3+1 \times 3 \times 5$  </li><li>$4,3,2: \quad 3 \times 4 \times 5+2 \times 3 \times 5+1 \times 2 \times 5$  </li></ul><p>也就是说$1,2,3,4,5$的最小分值是从这$6$个组合方式中计算出的。<br>现在考虑区间划分。<br>第一，划分成$[1,2],[2,3,4,5]$两段，$[1,2]$序列中没法计算最小分值，所以考虑序列$[2,3,4,5]$，这个区间的最小分值是从下面这两个序列中计算出来的。<br>$3,4: \quad 2 \times 3 \times 4+2 \times 4 \times 5$<br>$4,3: \quad 3 \times 4 \times 5+2 \times 3 \times 5$<br>与原序列相比，2这个数字还没有移除，我们在后边加上2移除时候的值，得到：<br>$3,4,2: \quad 2 \times 3 \times 4+2 \times 4 \times 5+1 \times 2 \times 5$<br>$4,3,2: \quad 3 \times 4 \times 5+2 \times 3 \times 5+1 \times 2 \times 5$  </p><p>第二，划分成$[1,2,3][3,4,5]$两段，$[1,2,3]$序列的最小分值就是将2移除时的分值，$[3,4,5]$序列的最小分值就是将4移除时的分值。所以，我们可以得到这样两个式子：<br>$2,4: \quad 1 \times 2 \times 3+3 \times 4 \times 5$<br>$4,2: \quad 3 \times 4 \times 5+1 \times 2 \times 3$<br>与原序列相比，3这个数字还没有移除，我们在后边再加上3移除时候的值，得到：<br>$2,4,3: \quad 1 \times 2 \times 3+3 \times 4 \times 5+1 \times 3 \times 5$<br>$4,2,3: \quad 3 \times 4 \times 5+1 \times 2 \times 3+1 \times 3 \times 5$  </p><p>第三，划分成$[1,2,3,4][4,5]$两段，同理，我们可以得到下面两个：<br>$2,3: \quad 1 \times 2 \times 3+1 \times 3 \times 4$<br>$3,2: \quad 2 \times 3 \times 4+1 \times 2 \times 4$<br>与原序列相比，4还没移除，将4移除。<br>$2,3,4: \quad 1 \times 2 \times 3+1 \times 3 \times 4+1 \times 4 \times 5$<br>$3,2,4: \quad 2 \times 3 \times 4+1 \times 2 \times 4+1 \times 4 \times 5$  </p><p>可以看出，拆成了小区间之后，两个小区间的情况再加上边界的数移除的值，就是大区间的所有情况。<br>大概就是这样，我们能看到了整体和局部的关系。这样的话，就可以用划分区间DP了。大区间的解可以从小区间的解中推到出来。上面的例子说明了，大区间求最小值可以拆成小区间，从小区间的最小值中构造出来。<br>解释一下代码，18行对区间长度进行迭代，19行对区间起始节点进行迭代，20行对一个区间的不同划分点进行迭代。转移规则就是在所有划分中取最小值，对于某一个划分的值等于，两个小区间的dp值再加上边界数移除的值。<br>代码中dp默认赋值为0, 所以22行要直接赋值一下，不然最小值永远都是0了，因为序列中所有的数是整数，最小值一定比0大。  </p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n-i; j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = j+<span class="number">1</span>; k &lt; j+i; k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(dp[j][j+i] == <span class="number">0</span>)</span><br><span class="line">                        dp[j][j+i] = dp[j][k]+dp[k][j+i]+num[j]*num[k]*num[j+i];</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        dp[j][j+i] = min(dp[j][j+i], dp[j][k]+dp[k][j+i]+num[j]*num[k]*num[j+i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[<span class="number">0</span>][n<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Multiplication Puzzle  &lt;/p&gt;
&lt;h1 id=&quot;限制&quot;&gt;&lt;a href=&quot;#限制&quot; class=&quot;headerlin
      
    
    </summary>
    
      <category term="ACM" scheme="http://yunhao.life/categories/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/categories/ACM/DP/"/>
    
      <category term="区间DP" scheme="http://yunhao.life/categories/ACM/DP/%E5%8C%BA%E9%97%B4DP/"/>
    
    
      <category term="ACM" scheme="http://yunhao.life/tags/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/tags/DP/"/>
    
      <category term="区间DP" scheme="http://yunhao.life/tags/%E5%8C%BA%E9%97%B4DP/"/>
    
      <category term="POJ" scheme="http://yunhao.life/tags/POJ/"/>
    
  </entry>
  
  <entry>
    <title>ACM POJ 2955 题解 区间DP</title>
    <link href="http://yunhao.life/2018/06/10/acm-poj-2955-dp-on-segment/"/>
    <id>http://yunhao.life/2018/06/10/acm-poj-2955-dp-on-segment/</id>
    <published>2018-06-10T15:57:07.000Z</published>
    <updated>2018-06-10T16:38:43.451Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>Brackets  </p><h1 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h1><p>Time Limit: 1000MS<br>Memory Limit: 65536K  </p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>We give the following inductive definition of a “regular brackets” sequence:  </p><ul><li>the empty sequence is a regular brackets sequence,  </li><li>if s is a regular brackets sequence, then (s) and [s] are regular brackets sequences, and  </li><li>if a and b are regular brackets sequences, then ab is a regular brackets sequence.  </li><li>no other sequence is a regular brackets sequence  </li></ul><p>For instance, all of the following character sequences are regular brackets sequences:<br>(), [], (()), ()[], ()[()]<br>while the following character sequences are not:<br>(, ], )(, ([)], ([(]<br>Given a brackets sequence of characters $a_1a_2…a_n$, your goal is to find the length of the longest regular brackets sequence that is a subsequence of $s$. That is, you wish to find the largest $m$ such that for indices $i_1, i_2, …, i_m$ where $1 \le i_1 \lt i_2 \lt … \lt i_m \le n$, $a_{i_1}a_{i_2} … a_{i_m}$ is a regular brackets sequence.<br>Given the initial sequence ([([]])], the longest regular brackets subsequence is [([])].  </p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>The input test file will contain multiple test cases. Each input test case consists of a single line containing only the characters (, ), [, and ]; each input test will have length between $1$ and $100$, inclusive. The end-of-file is marked by a line containing the word “end” and should not be processed.  </p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>For each input case, the program should print the length of the longest possible regular brackets subsequence on a single line.  </p><h1 id="样本"><a href="#样本" class="headerlink" title="样本"></a>样本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">((()))</span><br><span class="line">()()()</span><br><span class="line">([]])</span><br><span class="line">)[)(</span><br><span class="line">([][][)</span><br><span class="line">end</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">6</span><br><span class="line">4</span><br><span class="line">0</span><br><span class="line">6</span><br></pre></td></tr></table></figure><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>区间划分DP，没有限制的区间划分。<br>dp[a][b]存的是区间[a,b]内满足要求的符号表达式的最大长度。<br>然后dp[a][b]的最大长度，是对区间[a,b]进行划分得到的所有结果中，的最大值。<br>如果str[a]==’(‘并且str[b]==’)’或者是str[a]==’[‘并且str[b]==’]’，即a位置与b位置正好能够配对的时候，dp[a][b]还要与dp[a+1][b-1]作比较，dp[a][b]取最大值。<br>解释一下代码，<br>16行的i是对区间长度进行迭代。17行的j是对不同的区间起始节点进行迭代。18行是对[j,j+i]区间的不同划分点进行迭代。  </p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s"</span>, str))&#123;</span><br><span class="line">        <span class="keyword">if</span>(str[<span class="number">0</span>] == <span class="string">'e'</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n-i; j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = j; k &lt; j+i; k++)&#123;</span><br><span class="line">                    dp[j][j+i] = max(dp[j][j+i], dp[j][k]+dp[k+<span class="number">1</span>][j+i]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>((str[j] == <span class="string">'('</span> &amp;&amp; str[j+i] == <span class="string">')'</span>) || (str[j] == <span class="string">'['</span> &amp;&amp; str[j+i] == <span class="string">']'</span>))</span><br><span class="line">                    dp[j][j+i] = max(dp[j][j+i], dp[j+<span class="number">1</span>][j+i<span class="number">-1</span>]+<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[<span class="number">0</span>][n<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题解&quot;&gt;&lt;a href=&quot;#题解&quot; class=&quot;headerlink&quot; title=&quot;题解&quot;&gt;&lt;/a&gt;题解&lt;/h1&gt;&lt;p&gt;Brackets  &lt;/p&gt;
&lt;h1 id=&quot;限制&quot;&gt;&lt;a href=&quot;#限制&quot; class=&quot;headerlink&quot; title=&quot;限制&quot;
      
    
    </summary>
    
      <category term="ACM" scheme="http://yunhao.life/categories/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/categories/ACM/DP/"/>
    
      <category term="区间DP" scheme="http://yunhao.life/categories/ACM/DP/%E5%8C%BA%E9%97%B4DP/"/>
    
    
      <category term="ACM" scheme="http://yunhao.life/tags/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/tags/DP/"/>
    
      <category term="区间DP" scheme="http://yunhao.life/tags/%E5%8C%BA%E9%97%B4DP/"/>
    
      <category term="POJ" scheme="http://yunhao.life/tags/POJ/"/>
    
  </entry>
  
  <entry>
    <title>ACM HDU 4745 题解 区间DP</title>
    <link href="http://yunhao.life/2018/06/10/acm-hdu-4745-dp-on-segment/"/>
    <id>http://yunhao.life/2018/06/10/acm-hdu-4745-dp-on-segment/</id>
    <published>2018-06-10T12:47:42.000Z</published>
    <updated>2018-06-10T16:38:14.528Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Two Rabbits  </p><h1 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h1><p>Time Limit: 10000/5000 MS (Java/Others)<br>Memory Limit: 65535/65535 K (Java/Others)  </p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>Long long ago, there lived two rabbits Tom and Jerry in the forest. On a sunny afternoon, they planned to play a game with some stones. There were $n$ stones on the ground and they were arranged as a clockwise ring. That is to say, the first stone was adjacent to the second stone and the n-th stone, and the second stone is adjacent to the first stone and the third stone, and so on. The weight of the i-th stone is ai.<br>The rabbits jumped from one stone to another. Tom always jumped clockwise, and Jerry always jumped anticlockwise.<br>At the beginning, the rabbits both choose a stone and stand on it. Then at each turn, Tom should choose a stone which have not been stepped by itself and then jumped to it, and Jerry should do the same thing as Tom, but the jumping direction is anti-clockwise.<br>For some unknown reason, at any time , the weight of the two stones on which the two rabbits stood should be equal. Besides, any rabbit couldn’t jump over a stone which have been stepped by itself. In other words, if the Tom had stood on the second stone, it cannot jump from the first stone to the third stone or from the n-the stone to the 4-th stone.<br>Please note that during the whole process, it was OK for the two rabbits to stand on a same stone at the same time.<br>Now they want to find out the maximum turns they can play if they follow the optimal strategy.  </p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>The input contains at most $20$ test cases.<br>For each test cases, the first line contains a integer $n$ denoting the number of stones.<br>The next line contains $n$ integers separated by space, and the i-th integer $a_i$ denotes the weight of the i-th stone.$(1 \le n \le 1000, 1 \le a_i \le 1000)$<br>The input ends with $n = 0$.  </p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>For each test case, print a integer denoting the maximum turns.  </p><h1 id="样本"><a href="#样本" class="headerlink" title="样本"></a>样本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br><span class="line">4</span><br><span class="line">1 1 2 1</span><br><span class="line">6</span><br><span class="line">2 1 1 2 1 3</span><br><span class="line">0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h1 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h1><p>For the second case, the path of the Tom is $1, 2, 3, 4$, and the path of Jerry is $1, 4, 3, 2$.<br>For the third case, the path of Tom is $1,2,3,4,5$ and the path of Jerry is $4,3,2,1,5$.  </p><h1 id="思路一"><a href="#思路一" class="headerlink" title="思路一"></a>思路一</h1><p>两个人一个顺时针蹦，一个逆时针蹦。不能超过一圈。每次蹦到的数字都得相同。<br>为了保证最大跳数，二人走的路径是重合的。不难证明，如果假设二人走的路不重合，那么就会发现一条新的路径，比原来的路径更长，并且这条路径是重合的。所以二人走的路径是重合的。<br>因为二人走的路径是重合的。并且二人是按照相反方向跳的。所以这条路径是回文的。<br>这道题转化为，在一个长度是n的环形序列上，找一个不连续的回文序列的最大长度。<br>我们先说一种常用的思路，倍增。将序列拷贝一份到后面。变成2n的序列。然后区间DP。dp[a][b]是区间[a,b]内的最长回文子串的长度。dp[a][b]的最长回文子串的长度是从dp[a+1][b],dp[a][b-1]中的最大值。如果num[a]和num[b]相等，那么前面得到的最大值还需要与dp[a+1][b-1]+2比较一下，dp[a][b]取最大值。<br>最后的结果是，以0到n-1开头且长度为n的最长回文子序列中，找最大值。找的过程中需要注意一点，就是如果最开始两个兔子不在同一点出发，那么长度就是dp[i][i+n-1]。如果从同一点出发，长度就是dp[i][i+n-2]+1。所以要考虑到从同一点出发，和不同点出发两种情况，找出最大值。<br>解释一下代码，20行是对不同的区间长度进行迭代，21行是对区间起始节点进行迭代。33行是对所有的起始节点迭代，然后长度锁定在n-1，34行是从不同节点出发的情况，35行是从同一个节点出发的情况。  </p><h1 id="代码一"><a href="#代码一" class="headerlink" title="代码一"></a>代码一</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">2005</span>];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">2005</span>][<span class="number">2005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!n) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num[i]);</span><br><span class="line">            num[i+n] = num[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>*n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>*n-i; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>) dp[j][j+i] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    dp[j][j+i] = max(dp[j+<span class="number">1</span>][j+i], dp[j][j+i<span class="number">-1</span>]);</span><br><span class="line">                    <span class="keyword">if</span>(num[j] == num[j+i])&#123;</span><br><span class="line">                        dp[j][j+i] = max(dp[j][j+i], dp[j+<span class="number">1</span>][j+i<span class="number">-1</span>]+<span class="number">2</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            res = max(res, dp[i][i+n<span class="number">-1</span>]);</span><br><span class="line">            res = max(res, dp[i][i+n<span class="number">-2</span>]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="思路二"><a href="#思路二" class="headerlink" title="思路二"></a>思路二</h1><p>题目就是在长度为n的环上，求一个最长的回文子序列的长度。题目是如何转为为这个问题的，请见思路一。<br>这个思路主要是划分区间。即，把序列划分成2段。分别求两段的最长回文子序列。这两段回文子序列能够组成一个大的回文子序列。1…2…2…1 | 3…4…4…3…假设前段的最长回文子序列是1221，后段的最长回文子序列是3443。组成的大的回文子序列是43122134。这就是两个兔子跳的路径<br>结果就是在n-1个不同划分中，两段最长回文子序列的长度和中，找最大值。<br>dp[a][b]是区间[a,b]内的最长回文子串的长度。注意状态转移。dp[a][b]的最长回文子串的长度是从dp[a+1][b],dp[a][b-1]中的最大值。如果num[a]和num[b]相等，那么前面得到的最大值还需要与dp[a+1][b-1]+2比较一下，dp[a][b]取最大值。<br>这种结果中已经考虑到了两个兔子从不同出发点出发，相同出发点出发。考虑某个回文串长度是奇数。12321 | 4554，路径可以是541232145，两个回文串都是奇数长度，12321 | 454，路径可以使54123214。这个就是从同一点出发的情况。<br>为什么划分成两段，而不是三段，因为三段没法组成大的回文子序列。<br>解释一下代码，19行是对不同的区间长度进行迭代，20行是对区间起始节点进行迭代，32行是对不同的划分点进行迭代。  </p><h1 id="代码二"><a href="#代码二" class="headerlink" title="代码二"></a>代码二</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!n) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n-i; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>) dp[j][j+i] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    dp[j][j+i] = max(dp[j+<span class="number">1</span>][j+i], dp[j][j+i<span class="number">-1</span>]);</span><br><span class="line">                    <span class="keyword">if</span>(num[j] == num[j+i])&#123;</span><br><span class="line">                        dp[j][j+i] = max(dp[j][j+i], dp[j+<span class="number">1</span>][j+i<span class="number">-1</span>]+<span class="number">2</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++)&#123;</span><br><span class="line">            res = max(res, dp[<span class="number">0</span>][i] + dp[i+<span class="number">1</span>][n<span class="number">-1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Two Rabbits  &lt;/p&gt;
&lt;h1 id=&quot;限制&quot;&gt;&lt;a href=&quot;#限制&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="ACM" scheme="http://yunhao.life/categories/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/categories/ACM/DP/"/>
    
      <category term="区间DP" scheme="http://yunhao.life/categories/ACM/DP/%E5%8C%BA%E9%97%B4DP/"/>
    
    
      <category term="ACM" scheme="http://yunhao.life/tags/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/tags/DP/"/>
    
      <category term="HDU" scheme="http://yunhao.life/tags/HDU/"/>
    
      <category term="区间DP" scheme="http://yunhao.life/tags/%E5%8C%BA%E9%97%B4DP/"/>
    
  </entry>
  
  <entry>
    <title>ACM HDU 4632 题解 区间DP</title>
    <link href="http://yunhao.life/2018/06/10/acm-hdu-4632-dp-on-segment/"/>
    <id>http://yunhao.life/2018/06/10/acm-hdu-4632-dp-on-segment/</id>
    <published>2018-06-10T06:31:43.000Z</published>
    <updated>2018-06-10T06:48:34.665Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Palindrome subsequence  </p><h1 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h1><p>Time Limit: 2000/1000 MS (Java/Others)<br>Memory Limit: 131072/65535 K (Java/Others)  </p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>In mathematics, a subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements. For example, the sequence &lt;A, B, D&gt; is a subsequence of &lt;A, B, C, D, E, F&gt;.(<a href="http://en.wikipedia.org/wiki/Subsequence" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/Subsequence</a>)<br>Given a string $S$, your task is to find out how many different subsequence of $S$ is palindrome. Note that for any two subsequence $X = &lt;S_{x_1}, S_{x_2}, …, S_{x_k}&gt;$ and $Y = &lt;S_{y_1}, S_{y_2}, …, S_{y_k}&gt;$ , if there exist an integer $i$ $(1 \le i \le k)$ such that $x_i \ne y_i$, the subsequence $X$ and $Y$ should be consider different even if $S_{x_i} = S_{y_i}$. Also two subsequences with different length should be considered different.  </p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>The first line contains only one integer $T$ $(T \le 50)$, which is the number of test cases. Each test case contains a string $S$, the length of $S$ is not greater than $1000$ and only contains lowercase letters.  </p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>For each test case, output the case number first, then output the number of different subsequence of the given string, the answer should be module $10007$.  </p><h1 id="样本"><a href="#样本" class="headerlink" title="样本"></a>样本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">a</span><br><span class="line">aaaaa</span><br><span class="line">goodafternooneveryone</span><br><span class="line">welcometoooxxourproblems</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Case 1: 1</span><br><span class="line">Case 2: 31</span><br><span class="line">Case 3: 421</span><br><span class="line">Case 4: 960</span><br></pre></td></tr></table></figure><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>区间DP。dp[i][j]表示的是i,j区间的回文子序列的个数。注意状态转移。<br>在计算j-i+1长度的区间时，比j-i+1长度小的区间都已经计算过了。因此dp[i][j] = dp[i][j-1] + dp[i+1][j] - dp[i+1][j-1]。如果str[i]==str[j]，那么，dp[i][j]就还需要加上dp[i+1][j-1]+1。<br>19行是对区间长度进行循环。20行是对每个长度的所有区间进行循环。  </p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 10007</span></span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d\n"</span>, &amp;t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> w = <span class="number">0</span>; w &lt; t; w++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n-i; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>) dp[j][j+i] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    dp[j][j+i] = (dp[j][j+i<span class="number">-1</span>]+dp[j+<span class="number">1</span>][j+i])%mod;</span><br><span class="line">                    <span class="keyword">if</span>(str[j] != str[j+i])&#123;</span><br><span class="line">                        dp[j][j+i] -= dp[j+<span class="number">1</span>][j+i<span class="number">-1</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        dp[j][j+i] += <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    dp[j][j+i] = (dp[j][j+i]+mod)%mod;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>, w+<span class="number">1</span>, dp[<span class="number">0</span>][n<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Palindrome subsequence  &lt;/p&gt;
&lt;h1 id=&quot;限制&quot;&gt;&lt;a href=&quot;#限制&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="ACM" scheme="http://yunhao.life/categories/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/categories/ACM/DP/"/>
    
      <category term="区间DP" scheme="http://yunhao.life/categories/ACM/DP/%E5%8C%BA%E9%97%B4DP/"/>
    
    
      <category term="ACM" scheme="http://yunhao.life/tags/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/tags/DP/"/>
    
      <category term="HDU" scheme="http://yunhao.life/tags/HDU/"/>
    
      <category term="区间DP" scheme="http://yunhao.life/tags/%E5%8C%BA%E9%97%B4DP/"/>
    
  </entry>
  
  <entry>
    <title>ACM POJ 2342 题解 树形DP</title>
    <link href="http://yunhao.life/2018/06/10/acm-poj-2342-dp-on-tree/"/>
    <id>http://yunhao.life/2018/06/10/acm-poj-2342-dp-on-tree/</id>
    <published>2018-06-09T16:31:47.000Z</published>
    <updated>2018-06-09T16:50:22.034Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Anniversary party  </p><h1 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h1><p>Time Limit: 1000MS<br>Memory Limit: 65536K  </p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>There is going to be a party to celebrate the 80-th Anniversary of the Ural State University. The University has a hierarchical structure of employees. It means that the supervisor relation forms a tree rooted at the rector V. E. Tretyakov. In order to make the party funny for every one, the rector does not want both an employee and his or her immediate supervisor to be present. The personnel office has evaluated conviviality of each employee, so everyone has some number (rating) attached to him or her. Your task is to make a list of guests with the maximal possible sum of guests’ conviviality ratings.  </p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>Employees are numbered from $1$ to $N$. A first line of input contains a number $N$. $1 \le N \le 6000$. Each of the subsequent $N$ lines contains the conviviality rating of the corresponding employee. Conviviality rating is an integer number in a range from $-128$ to $127$. After that go $N – 1$ lines that describe a supervisor relation tree. Each line of the tree specification has the form:<br>L K<br>It means that the K-th employee is an immediate supervisor of the L-th employee. Input is ended with the line<br>0 0  </p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>Output should contain the maximal sum of guests’ ratings.  </p><h1 id="样本"><a href="#样本" class="headerlink" title="样本"></a>样本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1 3</span><br><span class="line">2 3</span><br><span class="line">6 4</span><br><span class="line">7 4</span><br><span class="line">4 5</span><br><span class="line">3 5</span><br><span class="line">0 0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>树形DP。就是在树上做DP。<br>dp[i][0]代表以i节点为根的子树，在不取i节点的情况下，能够得到的最大的欢乐值。<br>dp[i][1]代表以i节点为根的子树，在取i节点的情况下，能够得到的最大的欢乐值。<br>最后输出根节点的dp[root][0]和dp[root][1]的最大值。以哪个节点开始遍历树，哪个节点就是根节点。  </p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, l, k;</span><br><span class="line"><span class="keyword">int</span> val[<span class="number">6005</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; tr[<span class="number">6005</span>];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">6005</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> idx, <span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">    dp[idx][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    dp[idx][<span class="number">1</span>] = val[idx];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(tr[idx].size() == <span class="number">1</span> &amp;&amp; fa != <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tr[idx].size(); i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(tr[idx][i] == fa) <span class="keyword">continue</span>;</span><br><span class="line">        dfs(tr[idx][i], idx);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tr[idx].size(); i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(tr[idx][i] == fa) <span class="keyword">continue</span>;</span><br><span class="line">        dp[idx][<span class="number">0</span>] += max(dp[tr[idx][i]][<span class="number">0</span>], dp[tr[idx][i]][<span class="number">1</span>]);</span><br><span class="line">        dp[idx][<span class="number">1</span>] += dp[tr[idx][i]][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) tr[i].clear();</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;val[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;l, &amp;k))&#123;</span><br><span class="line">            <span class="keyword">if</span>(l == <span class="number">0</span> &amp;&amp; k == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            tr[l].push_back(k);</span><br><span class="line">            tr[k].push_back(l);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dfs(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, max(dp[<span class="number">1</span>][<span class="number">0</span>], dp[<span class="number">1</span>][<span class="number">1</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Anniversary party  &lt;/p&gt;
&lt;h1 id=&quot;限制&quot;&gt;&lt;a href=&quot;#限制&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
      <category term="ACM" scheme="http://yunhao.life/categories/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/categories/ACM/DP/"/>
    
      <category term="树形DP" scheme="http://yunhao.life/categories/ACM/DP/%E6%A0%91%E5%BD%A2DP/"/>
    
    
      <category term="ACM" scheme="http://yunhao.life/tags/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/tags/DP/"/>
    
      <category term="POJ" scheme="http://yunhao.life/tags/POJ/"/>
    
      <category term="树形DP" scheme="http://yunhao.life/tags/%E6%A0%91%E5%BD%A2DP/"/>
    
  </entry>
  
  <entry>
    <title>ACM CodeForces 963 B 题解 DFS</title>
    <link href="http://yunhao.life/2018/06/09/acm-cf-963b-dfs/"/>
    <id>http://yunhao.life/2018/06/09/acm-cf-963b-dfs/</id>
    <published>2018-06-09T14:01:07.000Z</published>
    <updated>2018-06-09T15:30:08.389Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>B. Destruction of a Tree  </p><h1 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h1><p>time limit per test: 1 second<br>memory limit per test: 256 megabytes<br>input: standard input<br>output: standard output  </p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>You are given a tree (a graph with $n$ vertices and $n-1$ edges in which it’s possible to reach any vertex from any other vertex using only its edges).<br>A vertex can be destroyed if this vertex has even degree. If you destroy a vertex, all edges connected to it are also deleted.<br>Destroy all vertices in the given tree or determine that it is impossible.  </p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>The first line contains integer $n$ $(1 \le n \le 2 \cdot 10^5)$ — number of vertices in a tree.<br>The second line contains $n$ integers $p_1,p_2,…,p_n$ $(0 \le p_i \le n)$. If $p_i \ne 0$ there is an edge between vertices $i$ and $p_i$. It is guaranteed that the given graph is a tree.  </p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>If it’s possible to destroy all vertices, print “YES” (without quotes), otherwise print “NO” (without quotes).<br>If it’s possible to destroy all vertices, in the next $n$ lines print the indices of the vertices in order you destroy them. If there are multiple correct answers, print any.  </p><h1 id="样本"><a href="#样本" class="headerlink" title="样本"></a>样本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">0 1 2 1 2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">5</span><br><span class="line">4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">0 1 2 3</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><h1 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h1><p>In the first example at first you have to remove the vertex with index $1$ (after that, the edges $(1, 2)$ and $(1, 4)$ are removed), then the vertex with index $2$ (and edges $(2, 3)$ and $(2, 5)$ are removed). After that there are no edges in the tree, so you can remove remaining vertices in any order.<br><img src="/images/acm-cf-963b-dfs/note.png" alt="提示图片"></p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>首先我们可以知道，n为偶数的情况下，一定是NO，因为n为偶数，总共有奇数条边，每次消除偶数条边，最后一定剩奇数，所以是NO。<br>所以我们只需考虑n是奇数情况。我们发现叶子结点的度一定是奇数，所以要想消除叶子节点，我们需要消除叶子节点的父亲。先消除靠近叶子节点的偶数度点，再往根节点的方向靠近，按此方法能够找到可行解。<br>我们消除某个节点的所有偶数度的子节点，剩下奇数度子节点要想消除，必须消除该节点。如果此时该节点的度是偶，那么可以消除，如果是奇数，还要消除该节点的父节点之后，才能消除该节点。这是一个递归的思路。用dfs。<br>我们用dfs遍历一棵树，遍历过程中用一个栈stk来保存节点之间的约束情况（某个节点的所有偶数度子节点消除之后，才可以消除当前节点，然后消除所有奇数度子节点。消除当前节点时，如果度为偶数，那么直接消除，否则就要等其父节点消除之后才可消除）。这个栈其实保存了消除过程中的拓扑序。<br><img src="/images/acm-cf-963b-dfs/normal.png" alt="例一"><br>比如上图，有21个节点。dfs过程如下，下面的序列显示的是栈stk的情况，左侧为栈底:<br>栈：1,2,5,12,13,14,5<br>5节点的所有偶度子节点都已经消除了，剩下的奇度子节点都在栈里。5节点再次入栈是因为保证拓扑序列正确。也就是说除了叶子结点之外的节点都需要，在其子节点遍历完毕之后，二次进栈。<br>为了消除12,13,14这几个节点，需要消除5节点，看5节点此时有偶数度。5节点是偶数度。可以消除5，所以5的所有奇度子节点也可以消除了。所以栈中两个5之间的都能输出了。输出顺序5,14,13,12。<br>栈：1,2<br>然后继续<br>栈：1,2,6,15,16,17,6<br>同理，输出6,17,16,15<br>栈：1,2,7,18,19,7<br>发现节点7没法消除，那么就留在栈里。<br>栈：1,2,7,18,19,7,8,20,21,8,2<br>发现节点8没法消除，节点2也没法消除。<br>栈：1,2,7,18,19,7,8,20,21,8,2,3,9,3<br>发现3,4可以消除，输出3,9<br>栈：1,2,7,18,19,7,8,20,21,8,2,4,10,11,4,1<br>发现4也没法消除，最后到1遍历结束。然后最后1能消除了。所以按照出栈顺序继续输出。1,4,11,10,2,8,21,20,7,19,18<br>这就是结果了。5,14,13,12,6,17,16,15,3,9,1,4,11,10,2,8,21,20,7,19,18<br>思路大概就是这样<br>需要注意的是最后栈里面的要都输出来。然后注意16行要fa！=0。否则的话对于下图这种根节点只有一个孩子的会误判为叶子结点。<br><img src="/images/acm-cf-963b-dfs/special.png" alt="例二"></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, num;</span><br><span class="line"><span class="keyword">int</span> stk[<span class="number">400005</span>];</span><br><span class="line"><span class="keyword">int</span> cur;</span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">200005</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; tr[<span class="number">200005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> idx, <span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">    stk[cur++] = idx;</span><br><span class="line">    <span class="keyword">if</span>(tr[idx].size() == <span class="number">1</span> &amp;&amp; fa != <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tr[idx].size(); i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(tr[idx][i] == fa) <span class="keyword">continue</span>;</span><br><span class="line">        dfs(tr[idx][i], idx);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    stk[cur++] = idx;</span><br><span class="line">    <span class="keyword">if</span>(cnt[idx] % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, idx);</span><br><span class="line">        cnt[idx] = <span class="number">-1</span>;</span><br><span class="line">        cnt[fa]--;</span><br><span class="line">        cur--;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(cur &amp;&amp; stk[cur<span class="number">-1</span>] != idx)&#123;</span><br><span class="line">            <span class="keyword">if</span>(cnt[stk[cur<span class="number">-1</span>]] != <span class="number">-1</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, stk[cur<span class="number">-1</span>]);</span><br><span class="line">                cnt[stk[cur<span class="number">-1</span>]] = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cur--;</span><br><span class="line">        &#125;</span><br><span class="line">        cur--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) tr[i].clear();</span><br><span class="line">        <span class="built_in">memset</span>(cnt, <span class="number">0</span>, <span class="keyword">sizeof</span> cnt);</span><br><span class="line">        cur = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line">            <span class="keyword">if</span>(num != <span class="number">0</span>)&#123;</span><br><span class="line">                cnt[i]++;</span><br><span class="line">                cnt[num]++;</span><br><span class="line">                tr[i].push_back(num);</span><br><span class="line">                tr[num].push_back(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">            dfs(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">while</span>(cur)&#123;</span><br><span class="line">                <span class="keyword">if</span>(cnt[stk[cur<span class="number">-1</span>]] != <span class="number">-1</span>)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, stk[cur<span class="number">-1</span>]);</span><br><span class="line">                    cnt[stk[cur<span class="number">-1</span>]] = <span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                cur--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;B. Destruction of a Tree  &lt;/p&gt;
&lt;h1 id=&quot;限制&quot;&gt;&lt;a href=&quot;#限制&quot; class=&quot;header
      
    
    </summary>
    
      <category term="ACM" scheme="http://yunhao.life/categories/ACM/"/>
    
      <category term="搜索" scheme="http://yunhao.life/categories/ACM/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="DFS" scheme="http://yunhao.life/categories/ACM/%E6%90%9C%E7%B4%A2/DFS/"/>
    
    
      <category term="ACM" scheme="http://yunhao.life/tags/ACM/"/>
    
      <category term="CodeForces" scheme="http://yunhao.life/tags/CodeForces/"/>
    
      <category term="搜索" scheme="http://yunhao.life/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="DFS" scheme="http://yunhao.life/tags/DFS/"/>
    
  </entry>
  
  <entry>
    <title>ACM CodeForces 877 B 题解 DP</title>
    <link href="http://yunhao.life/2018/06/08/acm-cf-877b-dp/"/>
    <id>http://yunhao.life/2018/06/08/acm-cf-877b-dp/</id>
    <published>2018-06-08T15:18:41.000Z</published>
    <updated>2018-06-08T15:38:19.834Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>B. Nikita and string  </p><h1 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h1><p>time limit per test: 2 seconds<br>memory limit per test: 256 megabytes<br>input: standard input<br>output: standard output  </p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>One day Nikita found the string containing letters “a” and “b” only.<br>Nikita thinks that string is beautiful if it can be cut into 3 strings (possibly empty) without changing the order of the letters, where the 1-st and the 3-rd one contain only letters “a” and the 2-nd contains only letters “b”.<br>Nikita wants to make the string beautiful by removing some (possibly none) of its characters, but without changing their order. What is the maximum length of the string he can get?  </p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><p>The first line contains a non-empty string of length not greater than $5000$ containing only lowercase English letters “a” and “b”.  </p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><p>Print a single integer — the maximum possible size of beautiful string Nikita can get.  </p><h1 id="样本"><a href="#样本" class="headerlink" title="样本"></a>样本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abba</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bab</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h1 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h1><p>It the first sample the string is already beautiful.<br>In the second sample he needs to delete one of “b” to make it beautiful.  </p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>动态规划。<br>dp[i][0]是指前i个字符中，a…序列(不一定连续)的最大长度。<br>dp[i][1]是指前i个字符中，a…b…序列(不一定连续)的最大长度。<br>dp[i][2]是指前i个字符中，a…b…a…序列(不一定连续)的最大长度。<br>转换过程详见代码。  </p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> str[<span class="number">5005</span>];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">5005</span>][<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s"</span>, str))&#123;</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i<span class="number">-1</span>] == <span class="string">'a'</span>)&#123;</span><br><span class="line">                dp[i][<span class="number">0</span>] = dp[i<span class="number">-1</span>][<span class="number">0</span>]+<span class="number">1</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = dp[i<span class="number">-1</span>][<span class="number">1</span>];</span><br><span class="line">                dp[i][<span class="number">2</span>] = max(dp[i<span class="number">-1</span>][<span class="number">1</span>]+<span class="number">1</span>, dp[i<span class="number">-1</span>][<span class="number">2</span>]+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                dp[i][<span class="number">0</span>] = dp[i<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">                dp[i][<span class="number">1</span>] = max(dp[i<span class="number">-1</span>][<span class="number">0</span>]+<span class="number">1</span>, dp[i<span class="number">-1</span>][<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">                dp[i][<span class="number">2</span>] = dp[i<span class="number">-1</span>][<span class="number">2</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, max(dp[len][<span class="number">0</span>], max(dp[len][<span class="number">1</span>], dp[len][<span class="number">2</span>])));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;B. Nikita and string  &lt;/p&gt;
&lt;h1 id=&quot;限制&quot;&gt;&lt;a href=&quot;#限制&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="ACM" scheme="http://yunhao.life/categories/ACM/"/>
    
      <category term="DP" scheme="http://yunhao.life/categories/ACM/DP/"/>
    
    
      <category term="ACM" scheme="http://yunhao.life/tags/ACM/"/>
    
      <category term="CodeForces" scheme="http://yunhao.life/tags/CodeForces/"/>
    
      <category term="DP" scheme="http://yunhao.life/tags/DP/"/>
    
  </entry>
  
</feed>
